apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "apik10.kasten.io/v1alpha1",
          "kind": "K10",
          "metadata": {
            "name": "k10"
          },
          "spec": {
            "ambassadorImage": {
              "image": "emissary",
              "registry": "docker.io",
              "repository": "emissaryingress"
            },
            "apigateway": {
              "serviceResolver": "dns"
            },
            "apiservices": {
              "deployed": true
            },
            "auth": {
              "basicAuth": {
                "enabled": false,
                "htpasswd": "",
                "secretName": ""
              },
              "dex": {
                "enabled": false,
                "providerURL": "",
                "redirectURL": ""
              },
              "groupAllowList": [],
              "k10AdminGroups": [],
              "k10AdminUsers": [],
              "ldap": {
                "bindDN": "",
                "bindPW": "",
                "bindPWSecretName": "",
                "dashboardURL": "",
                "enabled": false,
                "groupSearch": {
                  "baseDN": "",
                  "filter": "",
                  "nameAttr": "",
                  "userMatchers": []
                },
                "groupnameClaim": "groups",
                "groupnamePrefix": "",
                "host": "",
                "insecureNoSSL": false,
                "insecureSkipVerifySSL": false,
                "restartPod": false,
                "secretName": "",
                "startTLS": false,
                "userSearch": {
                  "baseDN": "",
                  "emailAttr": "",
                  "filter": "",
                  "idAttr": "",
                  "nameAttr": "",
                  "preferredUsernameAttr": "",
                  "username": ""
                },
                "usernameClaim": "email",
                "usernamePrefix": ""
              },
              "oidcAuth": {
                "clientID": "",
                "clientSecret": "",
                "enabled": false,
                "groupClaim": "",
                "groupPrefix": "",
                "logoutURL": "",
                "prompt": "",
                "providerURL": "",
                "redirectURL": "",
                "scopes": "",
                "secretName": "",
                "usernameClaim": "",
                "usernamePrefix": ""
              },
              "openshift": {
                "clientSecret": "",
                "dashboardURL": "",
                "enabled": false,
                "groupnameClaim": "groups",
                "groupnamePrefix": "",
                "insecureCA": false,
                "openshiftURL": "",
                "secretName": "",
                "serviceAccount": "",
                "useServiceAccountCA": false,
                "usernameClaim": "email",
                "usernamePrefix": ""
              },
              "tokenAuth": {
                "enabled": false
              }
            },
            "awsConfig": {
              "assumeRoleDuration": "",
              "efsBackupVaultName": "k10vault"
            },
            "cacertconfigmap": {
              "name": ""
            },
            "cluster": {
              "domainName": "cluster.local"
            },
            "clusterName": "",
            "dexImage": {
              "image": "dex",
              "registry": "quay.io",
              "repository": "dexidp"
            },
            "encryption": {
              "primaryKey": {
                "awsCmkKeyId": "",
                "vaultTransitKeyName": "",
                "vaultTransitPath": ""
              }
            },
            "eula": {
              "accept": false
            },
            "executorReplicas": 3,
            "externalGateway": {
              "annotations": {},
              "awsSSLCertARN": "",
              "create": false,
              "fqdn": {
                "name": "",
                "type": ""
              }
            },
            "gateway": {
              "exposeAdminPort": true,
              "insecureDisableSSLVerify": false
            },
            "genericVolumeSnapshot": {
              "resources": {
                "limits": {
                  "cpu": "",
                  "memory": ""
                },
                "requests": {
                  "cpu": "",
                  "memory": ""
                }
              }
            },
            "global": {
              "airgapped": {
                "repository": ""
              },
              "imagePullSecret": "",
              "images": {
                "admin": "",
                "aggregatedapis": "",
                "ambassador": "",
                "auth": "",
                "bloblifecyclemanager": "",
                "catalog": "",
                "cephtool": "",
                "configmap-reload": "",
                "controllermanager": "",
                "crypto": "",
                "dashboardbff": "",
                "datamover": "",
                "dex": "",
                "emissary": "",
                "events": "",
                "executor": "",
                "frontend": "",
                "grafana": "",
                "jobs": "",
                "kanister": "",
                "kanister-tools": "",
                "logging": "",
                "metering": "",
                "paygo_daemonset": "",
                "prometheus": "",
                "state": "",
                "upgrade": "",
                "vbrintegrationapi": ""
              },
              "ingress": {
                "create": false,
                "urlPath": ""
              },
              "persistence": {
                "accessMode": "ReadWriteOnce",
                "catalog": {
                  "size": ""
                },
                "enabled": true,
                "grafana": {
                  "size": "5Gi"
                },
                "jobs": {
                  "size": ""
                },
                "logging": {
                  "size": ""
                },
                "metering": {
                  "size": "2Gi"
                },
                "mountPath": "/mnt/k10state",
                "size": "20Gi",
                "storageClass": ""
              },
              "prometheus": {
                "external": {
                  "baseURL": "",
                  "host": "",
                  "port": ""
                }
              },
              "rhMarketPlace": true,
              "route": {
                "enabled": false,
                "path": ""
              },
              "upstreamCertifiedImages": false
            },
            "grafana": {
              "admin": {
                "existingSecret": "",
                "passwordKey": "admin-password",
                "userKey": "admin-user"
              },
              "adminUser": "admin",
              "affinity": {},
              "autoscaling": {
                "enabled": false
              },
              "containerSecurityContext": {},
              "dashboardProviders": {
                "dashboardproviders.yaml": {
                  "apiVersion": 1,
                  "providers": [
                    {
                      "disableDeletion": true,
                      "editable": false,
                      "folder": "",
                      "name": "default",
                      "options": {
                        "path": "/var/lib/grafana/dashboards"
                      },
                      "orgId": 1,
                      "type": "file"
                    }
                  ]
                }
              },
              "dashboards": {
                "default": {
                  "default": {
                    "json": "{\n  \"annotations\": {\n    \"list\": [\n      {\n        \"builtIn\": 1,\n        \"datasource\": \"-- Grafana --\",\n        \"enable\": true,\n        \"hide\": true,\n        \"iconColor\": \"rgba(0, 211, 255, 1)\",\n        \"name\": \"Annotations \u0026 Alerts\",\n        \"target\": {\n          \"limit\": 100,\n          \"matchAny\": false,\n          \"tags\": [],\n          \"type\": \"dashboard\"\n        },\n        \"type\": \"dashboard\"\n      }\n    ]\n  },\n  \"editable\": true,\n  \"gnetId\": null,\n  \"graphTooltip\": 0,\n  \"id\": 1,\n  \"iteration\": 1645712665620,\n  \"links\": [],\n  \"panels\": [\n    {\n      \"collapsed\": false,\n      \"datasource\": null,\n      \"gridPos\": {\n        \"h\": 1,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 0\n      },\n      \"id\": 18,\n      \"panels\": [],\n      \"title\": \"Applications\",\n      \"type\": \"row\"\n    },\n    {\n      \"datasource\": \"Prometheus\",\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"mappings\": [],\n          \"noValue\": \"0\",\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"yellow\",\n                \"value\": null\n              },\n              {\n                \"color\": \"green\",\n                \"value\": 1\n              }\n            ]\n          }\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 7,\n        \"w\": 5,\n        \"x\": 0,\n        \"y\": 1\n      },\n      \"id\": 24,\n      \"interval\": \"1m\",\n      \"options\": {\n        \"colorMode\": \"value\",\n        \"graphMode\": \"none\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"auto\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"last\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"text\": {},\n        \"textMode\": \"auto\"\n      },\n      \"pluginVersion\": \"8.1.8\",\n      \"targets\": [\n        {\n          \"exemplar\": false,\n          \"expr\": \"sum(round(increase(action_backup_ended_overall{cluster=\\\"$cluster\\\", state=\\\"succeeded\\\"}[$__range])))\",\n          \"hide\": false,\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"B\"\n        }\n      ],\n      \"timeFrom\": null,\n      \"title\": \"Backups Completed\",\n      \"type\": \"stat\"\n    },\n    {\n      \"datasource\": \"Prometheus\",\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"mappings\": [\n            {\n              \"options\": {\n                \"0\": {\n                  \"index\": 0,\n                  \"text\": \"-\"\n                }\n              },\n              \"type\": \"value\"\n            }\n          ],\n          \"noValue\": \"-\",\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"text\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 1\n              }\n            ]\n          }\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 7,\n        \"w\": 3,\n        \"x\": 5,\n        \"y\": 1\n      },\n      \"id\": 33,\n      \"interval\": \"1m\",\n      \"options\": {\n        \"colorMode\": \"value\",\n        \"graphMode\": \"none\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"auto\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"last\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"text\": {},\n        \"textMode\": \"auto\"\n      },\n      \"pluginVersion\": \"8.1.8\",\n      \"targets\": [\n        {\n          \"exemplar\": false,\n          \"expr\": \"sum(round(increase(action_backup_ended_overall{cluster=\\\"$cluster\\\", state=~\\\"failed|cancelled\\\"}[$__range])))\",\n          \"hide\": false,\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"B\"\n        }\n      ],\n      \"timeFrom\": null,\n      \"title\": \"Backups Failed\",\n      \"type\": \"stat\"\n    },\n    {\n      \"datasource\": \"Prometheus\",\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"mappings\": [\n            {\n              \"options\": {\n                \"0\": {\n                  \"index\": 0,\n                  \"text\": \"-\"\n                }\n              },\n              \"type\": \"value\"\n            }\n          ],\n          \"noValue\": \"-\",\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"text\",\n                \"value\": null\n              },\n              {\n                \"color\": \"#EAB839\",\n                \"value\": 1\n              }\n            ]\n          }\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 7,\n        \"w\": 3,\n        \"x\": 8,\n        \"y\": 1\n      },\n      \"id\": 34,\n      \"interval\": \"1m\",\n      \"options\": {\n        \"colorMode\": \"value\",\n        \"graphMode\": \"none\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"auto\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"last\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"text\": {},\n        \"textMode\": \"auto\"\n      },\n      \"pluginVersion\": \"8.1.8\",\n      \"targets\": [\n        {\n          \"exemplar\": false,\n          \"expr\": \"sum(round(increase(action_backup_skipped_overall{cluster=\\\"$cluster\\\"}[$__range])))\",\n          \"hide\": false,\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"B\"\n        }\n      ],\n      \"timeFrom\": null,\n      \"title\": \"Backups Skipped\",\n      \"type\": \"stat\"\n    },\n    {\n      \"datasource\": \"Prometheus\",\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"mappings\": [\n            {\n              \"options\": {\n                \"0\": {\n                  \"index\": 0,\n                  \"text\": \"-\"\n                }\n              },\n              \"type\": \"value\"\n            }\n          ],\n          \"noValue\": \"-\",\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"text\",\n                \"value\": null\n              },\n              {\n                \"color\": \"green\",\n                \"value\": 1\n              }\n            ]\n          }\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 7,\n        \"w\": 5,\n        \"x\": 13,\n        \"y\": 1\n      },\n      \"id\": 35,\n      \"interval\": \"1m\",\n      \"options\": {\n        \"colorMode\": \"value\",\n        \"graphMode\": \"none\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"auto\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"last\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"text\": {},\n        \"textMode\": \"auto\"\n      },\n      \"pluginVersion\": \"8.1.8\",\n      \"targets\": [\n        {\n          \"exemplar\": false,\n          \"expr\": \"sum(round(increase(action_restore_ended_overall{cluster=\\\"$cluster\\\", state=\\\"succeeded\\\"}[$__range])))\",\n          \"hide\": false,\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"B\"\n        }\n      ],\n      \"timeFrom\": null,\n      \"title\": \"Restores Completed\",\n      \"type\": \"stat\"\n    },\n    {\n      \"datasource\": \"Prometheus\",\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"mappings\": [\n            {\n              \"options\": {\n                \"0\": {\n                  \"index\": 0,\n                  \"text\": \"-\"\n                }\n              },\n              \"type\": \"value\"\n            }\n          ],\n          \"noValue\": \"-\",\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"text\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 1\n              }\n            ]\n          }\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 7,\n        \"w\": 3,\n        \"x\": 18,\n        \"y\": 1\n      },\n      \"id\": 36,\n      \"interval\": \"1m\",\n      \"options\": {\n        \"colorMode\": \"value\",\n        \"graphMode\": \"none\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"auto\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"last\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"text\": {},\n        \"textMode\": \"auto\"\n      },\n      \"pluginVersion\": \"8.1.8\",\n      \"targets\": [\n        {\n          \"exemplar\": false,\n          \"expr\": \"sum(round(increase(action_restore_ended_overall{cluster=\\\"$cluster\\\", state=~\\\"failed|cancelled\\\"}[$__range])))\",\n          \"hide\": false,\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"B\"\n        }\n      ],\n      \"timeFrom\": null,\n      \"title\": \"Restores Failed\",\n      \"type\": \"stat\"\n    },\n    {\n      \"datasource\": \"Prometheus\",\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"mappings\": [\n            {\n              \"options\": {\n                \"0\": {\n                  \"index\": 0,\n                  \"text\": \"-\"\n                }\n              },\n              \"type\": \"value\"\n            }\n          ],\n          \"noValue\": \"-\",\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"text\",\n                \"value\": null\n              },\n              {\n                \"color\": \"#EAB839\",\n                \"value\": 1\n              }\n            ]\n          }\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 7,\n        \"w\": 3,\n        \"x\": 21,\n        \"y\": 1\n      },\n      \"id\": 23,\n      \"interval\": \"1m\",\n      \"options\": {\n        \"colorMode\": \"value\",\n        \"graphMode\": \"none\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"auto\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"last\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"text\": {},\n        \"textMode\": \"auto\"\n      },\n      \"pluginVersion\": \"8.1.8\",\n      \"targets\": [\n        {\n          \"exemplar\": false,\n          \"expr\": \"sum(round(increase(action_restore_skipped_overall{cluster=\\\"$cluster\\\"}[$__range])))\",\n          \"hide\": false,\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"B\"\n        }\n      ],\n      \"timeFrom\": null,\n      \"title\": \"Restores Skipped\",\n      \"type\": \"stat\"\n    },\n    {\n      \"collapsed\": false,\n      \"datasource\": null,\n      \"gridPos\": {\n        \"h\": 1,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 8\n      },\n      \"id\": 16,\n      \"panels\": [],\n      \"title\": \"Cluster\",\n      \"type\": \"row\"\n    },\n    {\n      \"datasource\": \"Prometheus\",\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"mappings\": [],\n          \"noValue\": \"0\",\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"yellow\",\n                \"value\": null\n              },\n              {\n                \"color\": \"green\",\n                \"value\": 1\n              }\n            ]\n          }\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 7,\n        \"w\": 5,\n        \"x\": 0,\n        \"y\": 9\n      },\n      \"id\": 10,\n      \"interval\": \"1m\",\n      \"options\": {\n        \"colorMode\": \"value\",\n        \"graphMode\": \"none\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"auto\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"last\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"text\": {},\n        \"textMode\": \"auto\"\n      },\n      \"pluginVersion\": \"8.1.8\",\n      \"targets\": [\n        {\n          \"exemplar\": false,\n          \"expr\": \"sum(round(increase(action_backup_cluster_ended_overall{cluster=\\\"$cluster\\\", state=\\\"succeeded\\\"}[$__range])))\",\n          \"hide\": false,\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"B\"\n        }\n      ],\n      \"timeFrom\": null,\n      \"title\": \"Cluster Backups Completed\",\n      \"type\": \"stat\"\n    },\n    {\n      \"datasource\": \"Prometheus\",\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"mappings\": [\n            {\n              \"options\": {\n                \"0\": {\n                  \"index\": 0,\n                  \"text\": \"-\"\n                }\n              },\n              \"type\": \"value\"\n            }\n          ],\n          \"noValue\": \"-\",\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"text\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 1\n              }\n            ]\n          }\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 7,\n        \"w\": 3,\n        \"x\": 5,\n        \"y\": 9\n      },\n      \"id\": 19,\n      \"interval\": \"1m\",\n      \"options\": {\n        \"colorMode\": \"value\",\n        \"graphMode\": \"none\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"auto\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"last\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"text\": {},\n        \"textMode\": \"auto\"\n      },\n      \"pluginVersion\": \"8.1.8\",\n      \"targets\": [\n        {\n          \"exemplar\": false,\n          \"expr\": \"sum(round(increase(action_backup_cluster_ended_overall{cluster=\\\"$cluster\\\", state=~\\\"failed|cancelled\\\"}[$__range])))\",\n          \"hide\": false,\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"B\"\n        }\n      ],\n      \"timeFrom\": null,\n      \"title\": \"Cluster Backups Failed\",\n      \"type\": \"stat\"\n    },\n    {\n      \"datasource\": \"Prometheus\",\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"mappings\": [\n            {\n              \"options\": {\n                \"0\": {\n                  \"index\": 0,\n                  \"text\": \"-\"\n                }\n              },\n              \"type\": \"value\"\n            }\n          ],\n          \"noValue\": \"-\",\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"text\",\n                \"value\": null\n              },\n              {\n                \"color\": \"#EAB839\",\n                \"value\": 1\n              }\n            ]\n          }\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 7,\n        \"w\": 3,\n        \"x\": 8,\n        \"y\": 9\n      },\n      \"id\": 28,\n      \"interval\": \"1m\",\n      \"options\": {\n        \"colorMode\": \"value\",\n        \"graphMode\": \"none\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"auto\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"last\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"text\": {},\n        \"textMode\": \"auto\"\n      },\n      \"pluginVersion\": \"8.1.8\",\n      \"targets\": [\n        {\n          \"exemplar\": false,\n          \"expr\": \"sum(round(increase(action_backup_cluster_skipped_overall{cluster=\\\"$cluster\\\"}[$__range])))\",\n          \"hide\": false,\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"B\"\n        }\n      ],\n      \"timeFrom\": null,\n      \"title\": \"Cluster Backups Skipped\",\n      \"type\": \"stat\"\n    },\n    {\n      \"datasource\": \"Prometheus\",\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"mappings\": [\n            {\n              \"options\": {\n                \"0\": {\n                  \"index\": 0,\n                  \"text\": \"-\"\n                }\n              },\n              \"type\": \"value\"\n            }\n          ],\n          \"noValue\": \"-\",\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"text\",\n                \"value\": null\n              },\n              {\n                \"color\": \"green\",\n                \"value\": 1\n              }\n            ]\n          }\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 7,\n        \"w\": 5,\n        \"x\": 13,\n        \"y\": 9\n      },\n      \"id\": 21,\n      \"interval\": \"1m\",\n      \"options\": {\n        \"colorMode\": \"value\",\n        \"graphMode\": \"none\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"auto\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"last\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"text\": {},\n        \"textMode\": \"auto\"\n      },\n      \"pluginVersion\": \"8.1.8\",\n      \"targets\": [\n        {\n          \"exemplar\": false,\n          \"expr\": \"sum(round(increase(action_restore_cluster_ended_overall{cluster=\\\"$cluster\\\", state=\\\"succeeded\\\"}[$__range])))\",\n          \"hide\": false,\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"B\"\n        }\n      ],\n      \"timeFrom\": null,\n      \"title\": \"Cluster Restores Completed\",\n      \"type\": \"stat\"\n    },\n    {\n      \"datasource\": \"Prometheus\",\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"mappings\": [\n            {\n              \"options\": {\n                \"0\": {\n                  \"index\": 0,\n                  \"text\": \"-\"\n                }\n              },\n              \"type\": \"value\"\n            }\n          ],\n          \"noValue\": \"-\",\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"text\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 1\n              }\n            ]\n          }\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 7,\n        \"w\": 3,\n        \"x\": 18,\n        \"y\": 9\n      },\n      \"id\": 22,\n      \"interval\": \"1m\",\n      \"options\": {\n        \"colorMode\": \"value\",\n        \"graphMode\": \"none\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"auto\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"last\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"text\": {},\n        \"textMode\": \"auto\"\n      },\n      \"pluginVersion\": \"8.1.8\",\n      \"targets\": [\n        {\n          \"exemplar\": false,\n          \"expr\": \"sum(round(increase(action_restore_cluster_ended_overall{cluster=\\\"$cluster\\\", state=~\\\"failed|cancelled\\\"}[$__range])))\",\n          \"hide\": false,\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"B\"\n        }\n      ],\n      \"timeFrom\": null,\n      \"title\": \"Cluster Restores Failed\",\n      \"type\": \"stat\"\n    },\n    {\n      \"datasource\": \"Prometheus\",\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"mappings\": [\n            {\n              \"options\": {\n                \"0\": {\n                  \"index\": 0,\n                  \"text\": \"-\"\n                }\n              },\n              \"type\": \"value\"\n            }\n          ],\n          \"noValue\": \"-\",\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"text\",\n                \"value\": null\n              },\n              {\n                \"color\": \"#EAB839\",\n                \"value\": 1\n              }\n            ]\n          }\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 7,\n        \"w\": 3,\n        \"x\": 21,\n        \"y\": 9\n      },\n      \"id\": 25,\n      \"interval\": \"1m\",\n      \"options\": {\n        \"colorMode\": \"value\",\n        \"graphMode\": \"none\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"auto\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"last\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"text\": {},\n        \"textMode\": \"auto\"\n      },\n      \"pluginVersion\": \"8.1.8\",\n      \"targets\": [\n        {\n          \"exemplar\": false,\n          \"expr\": \"sum(round(increase(action_restore_cluster_skipped_overall{cluster=\\\"$cluster\\\"}[$__range])))\",\n          \"hide\": false,\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"B\"\n        }\n      ],\n      \"timeFrom\": null,\n      \"title\": \"Cluster Restores Skipped\",\n      \"type\": \"stat\"\n    },\n    {\n      \"collapsed\": false,\n      \"datasource\": null,\n      \"gridPos\": {\n        \"h\": 1,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 16\n      },\n      \"id\": 31,\n      \"panels\": [],\n      \"title\": \"Backup Exports\",\n      \"type\": \"row\"\n    },\n    {\n      \"datasource\": \"Prometheus\",\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"mappings\": [],\n          \"noValue\": \"0\",\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"text\",\n                \"value\": null\n              },\n              {\n                \"color\": \"green\",\n                \"value\": 1\n              }\n            ]\n          }\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 6,\n        \"w\": 5,\n        \"x\": 0,\n        \"y\": 17\n      },\n      \"id\": 38,\n      \"interval\": \"1m\",\n      \"options\": {\n        \"colorMode\": \"value\",\n        \"graphMode\": \"none\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"auto\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"last\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"text\": {},\n        \"textMode\": \"auto\"\n      },\n      \"pluginVersion\": \"8.1.8\",\n      \"targets\": [\n        {\n          \"exemplar\": false,\n          \"expr\": \"sum(round(increase(action_export_ended_overall{cluster=\\\"$cluster\\\", state=\\\"succeeded\\\"}[$__range])))\",\n          \"hide\": false,\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"B\"\n        }\n      ],\n      \"timeFrom\": null,\n      \"title\": \"Exports Completed\",\n      \"type\": \"stat\"\n    },\n    {\n      \"datasource\": \"Prometheus\",\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"mappings\": [\n            {\n              \"options\": {\n                \"0\": {\n                  \"index\": 0,\n                  \"text\": \"-\"\n                }\n              },\n              \"type\": \"value\"\n            }\n          ],\n          \"noValue\": \"-\",\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"text\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 1\n              }\n            ]\n          }\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 6,\n        \"w\": 3,\n        \"x\": 5,\n        \"y\": 17\n      },\n      \"id\": 29,\n      \"interval\": \"1m\",\n      \"options\": {\n        \"colorMode\": \"value\",\n        \"graphMode\": \"none\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"auto\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"last\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"text\": {},\n        \"textMode\": \"auto\"\n      },\n      \"pluginVersion\": \"8.1.8\",\n      \"targets\": [\n        {\n          \"exemplar\": false,\n          \"expr\": \"sum(round(increase(action_export_ended_overall{cluster=\\\"$cluster\\\", state=~\\\"failed|cancelled\\\"}[$__range])))\",\n          \"hide\": false,\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"B\"\n        }\n      ],\n      \"timeFrom\": null,\n      \"title\": \"Exports Failed\",\n      \"type\": \"stat\"\n    },\n    {\n      \"datasource\": \"Prometheus\",\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"mappings\": [\n            {\n              \"options\": {\n                \"0\": {\n                  \"index\": 0,\n                  \"text\": \"-\"\n                }\n              },\n              \"type\": \"value\"\n            }\n          ],\n          \"noValue\": \"-\",\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"text\",\n                \"value\": null\n              },\n              {\n                \"color\": \"#EAB839\",\n                \"value\": 1\n              }\n            ]\n          }\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 6,\n        \"w\": 3,\n        \"x\": 8,\n        \"y\": 17\n      },\n      \"id\": 20,\n      \"interval\": \"1m\",\n      \"options\": {\n        \"colorMode\": \"value\",\n        \"graphMode\": \"none\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"auto\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"last\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"text\": {},\n        \"textMode\": \"auto\"\n      },\n      \"pluginVersion\": \"8.1.8\",\n      \"targets\": [\n        {\n          \"exemplar\": false,\n          \"expr\": \"sum(round(increase(action_export_skipped_overall{cluster=\\\"$cluster\\\"}[$__range])))\",\n          \"hide\": false,\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"B\"\n        }\n      ],\n      \"timeFrom\": null,\n      \"title\": \"Exports Skipped\",\n      \"type\": \"stat\"\n    },\n    {\n      \"datasource\": \"Prometheus\",\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"mappings\": [],\n          \"noValue\": \"0\",\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"text\",\n                \"value\": null\n              },\n              {\n                \"color\": \"green\",\n                \"value\": 1\n              }\n            ]\n          }\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 6,\n        \"w\": 5,\n        \"x\": 13,\n        \"y\": 17\n      },\n      \"id\": 27,\n      \"interval\": \"1m\",\n      \"options\": {\n        \"colorMode\": \"value\",\n        \"graphMode\": \"none\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"auto\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"last\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"text\": {},\n        \"textMode\": \"auto\"\n      },\n      \"pluginVersion\": \"8.1.8\",\n      \"targets\": [\n        {\n          \"exemplar\": false,\n          \"expr\": \"sum(round(increase(action_import_ended_overall{cluster=\\\"$cluster\\\", state=\\\"succeeded\\\"}[$__range])))\",\n          \"hide\": false,\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"B\"\n        }\n      ],\n      \"timeFrom\": null,\n      \"title\": \"Imports Completed\",\n      \"type\": \"stat\"\n    },\n    {\n      \"datasource\": \"Prometheus\",\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"mappings\": [\n            {\n              \"options\": {\n                \"0\": {\n                  \"index\": 0,\n                  \"text\": \"-\"\n                }\n              },\n              \"type\": \"value\"\n            }\n          ],\n          \"noValue\": \"-\",\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"text\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 1\n              }\n            ]\n          }\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 6,\n        \"w\": 3,\n        \"x\": 18,\n        \"y\": 17\n      },\n      \"id\": 39,\n      \"interval\": \"1m\",\n      \"options\": {\n        \"colorMode\": \"value\",\n        \"graphMode\": \"none\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"auto\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"last\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"text\": {},\n        \"textMode\": \"auto\"\n      },\n      \"pluginVersion\": \"8.1.8\",\n      \"targets\": [\n        {\n          \"exemplar\": false,\n          \"expr\": \"sum(round(increase(action_import_ended_overall{cluster=\\\"$cluster\\\", state=~\\\"failed|cancelled\\\"}[$__range])))\",\n          \"hide\": false,\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"B\"\n        }\n      ],\n      \"timeFrom\": null,\n      \"title\": \"Imports Failed\",\n      \"type\": \"stat\"\n    },\n    {\n      \"datasource\": \"Prometheus\",\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"mappings\": [\n            {\n              \"options\": {\n                \"0\": {\n                  \"index\": 0,\n                  \"text\": \"-\"\n                }\n              },\n              \"type\": \"value\"\n            }\n          ],\n          \"noValue\": \"-\",\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"text\",\n                \"value\": null\n              },\n              {\n                \"color\": \"#EAB839\",\n                \"value\": 1\n              }\n            ]\n          }\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 6,\n        \"w\": 3,\n        \"x\": 21,\n        \"y\": 17\n      },\n      \"id\": 37,\n      \"interval\": \"1m\",\n      \"options\": {\n        \"colorMode\": \"value\",\n        \"graphMode\": \"none\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"auto\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"last\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"text\": {},\n        \"textMode\": \"auto\"\n      },\n      \"pluginVersion\": \"8.1.8\",\n      \"targets\": [\n        {\n          \"exemplar\": false,\n          \"expr\": \"sum(round(increase(action_import_skipped_overall{cluster=\\\"$cluster\\\"}[$__range])))\",\n          \"hide\": false,\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"B\"\n        }\n      ],\n      \"timeFrom\": null,\n      \"title\": \"Imports Skipped\",\n      \"type\": \"stat\"\n    },\n    {\n      \"collapsed\": false,\n      \"datasource\": null,\n      \"gridPos\": {\n        \"h\": 1,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 23\n      },\n      \"id\": 14,\n      \"panels\": [],\n      \"title\": \"System\",\n      \"type\": \"row\"\n    },\n    {\n      \"datasource\": \"Prometheus\",\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"mappings\": [\n            {\n              \"options\": {\n                \"0\": {\n                  \"index\": 0,\n                  \"text\": \"-\"\n                }\n              },\n              \"type\": \"value\"\n            }\n          ],\n          \"noValue\": \"-\",\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"text\",\n                \"value\": null\n              },\n              {\n                \"color\": \"green\",\n                \"value\": 1\n              }\n            ]\n          },\n          \"unit\": \"runs\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 6,\n        \"w\": 3,\n        \"x\": 0,\n        \"y\": 24\n      },\n      \"id\": 12,\n      \"interval\": \"1m\",\n      \"options\": {\n        \"colorMode\": \"value\",\n        \"graphMode\": \"none\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"auto\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"last\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"text\": {},\n        \"textMode\": \"auto\"\n      },\n      \"pluginVersion\": \"8.1.8\",\n      \"targets\": [\n        {\n          \"exemplar\": false,\n          \"expr\": \"sum(round(increase(action_run_ended_overall{cluster=\\\"$cluster\\\", state=\\\"succeeded\\\"}[$__range])))\",\n          \"format\": \"time_series\",\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"queryType\": \"randomWalk\",\n          \"refId\": \"A\"\n        }\n      ],\n      \"timeFrom\": null,\n      \"title\": \"Policy Runs\",\n      \"type\": \"stat\"\n    },\n    {\n      \"datasource\": \"Prometheus\",\n      \"description\": \"\",\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"mappings\": [\n            {\n              \"options\": {\n                \"0\": {\n                  \"index\": 0,\n                  \"text\": \"-\"\n                }\n              },\n              \"type\": \"value\"\n            }\n          ],\n          \"noValue\": \"-\",\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"text\",\n                \"value\": null\n              },\n              {\n                \"color\": \"yellow\",\n                \"value\": 1\n              }\n            ]\n          },\n          \"unit\": \"runs\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 6,\n        \"w\": 3,\n        \"x\": 3,\n        \"y\": 24\n      },\n      \"id\": 40,\n      \"interval\": \"1m\",\n      \"options\": {\n        \"colorMode\": \"value\",\n        \"graphMode\": \"none\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"auto\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"last\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"text\": {},\n        \"textMode\": \"auto\"\n      },\n      \"pluginVersion\": \"8.1.8\",\n      \"targets\": [\n        {\n          \"exemplar\": false,\n          \"expr\": \"sum(round(increase(action_run_skipped_overall{cluster=\\\"$cluster\\\"}[$__range])))\",\n          \"format\": \"time_series\",\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"queryType\": \"randomWalk\",\n          \"refId\": \"A\"\n        }\n      ],\n      \"timeFrom\": null,\n      \"title\": \"Policy Runs Skipped\",\n      \"type\": \"stat\"\n    },\n    {\n      \"datasource\": \"Prometheus\",\n      \"description\": \"\",\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"mappings\": [],\n          \"noValue\": \"-\",\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"#ccccdc\",\n                \"value\": null\n              }\n            ]\n          },\n          \"unit\": \"bytes\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 6,\n        \"w\": 3,\n        \"x\": 6,\n        \"y\": 24\n      },\n      \"id\": 6,\n      \"options\": {\n        \"colorMode\": \"value\",\n        \"graphMode\": \"area\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"auto\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"lastNotNull\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"text\": {},\n        \"textMode\": \"auto\"\n      },\n      \"pluginVersion\": \"8.1.8\",\n      \"targets\": [\n        {\n          \"exemplar\": true,\n          \"expr\": \"catalog_persistent_volume_disk_space_used_bytes{cluster=\\\"$cluster\\\"}\",\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"queryType\": \"randomWalk\",\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Catalog Volume Used\",\n      \"type\": \"stat\"\n    },\n    {\n      \"datasource\": \"Prometheus\",\n      \"description\": \"\",\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"mappings\": [],\n          \"max\": 100,\n          \"min\": 0,\n          \"noValue\": \"-\",\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"yellow\",\n                \"value\": 70\n              },\n              {\n                \"color\": \"orange\",\n                \"value\": 80\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 90\n              }\n            ]\n          },\n          \"unit\": \"percent\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 6,\n        \"w\": 3,\n        \"x\": 9,\n        \"y\": 24\n      },\n      \"id\": 2,\n      \"options\": {\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"lastNotNull\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"showThresholdLabels\": false,\n        \"showThresholdMarkers\": true,\n        \"text\": {}\n      },\n      \"pluginVersion\": \"8.1.8\",\n      \"targets\": [\n        {\n          \"exemplar\": true,\n          \"expr\": \"100-catalog_persistent_volume_free_space_percent{cluster=\\\"$cluster\\\"}\",\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"queryType\": \"randomWalk\",\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Catalog Volume Used Space\",\n      \"type\": \"gauge\"\n    },\n    {\n      \"datasource\": \"Prometheus\",\n      \"description\": \"\",\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"mappings\": [],\n          \"noValue\": \"-\",\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"#ccccdc\",\n                \"value\": null\n              }\n            ]\n          },\n          \"unit\": \"bytes\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 6,\n        \"w\": 3,\n        \"x\": 12,\n        \"y\": 24\n      },\n      \"id\": 8,\n      \"options\": {\n        \"colorMode\": \"value\",\n        \"graphMode\": \"area\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"auto\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"lastNotNull\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"text\": {},\n        \"textMode\": \"auto\"\n      },\n      \"pluginVersion\": \"8.1.8\",\n      \"targets\": [\n        {\n          \"exemplar\": true,\n          \"expr\": \"jobs_persistent_volume_disk_space_used_bytes{cluster=\\\"$cluster\\\"}\",\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"queryType\": \"randomWalk\",\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Jobs Volume Used\",\n      \"type\": \"stat\"\n    },\n    {\n      \"datasource\": \"Prometheus\",\n      \"description\": \"\",\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"mappings\": [],\n          \"max\": 100,\n          \"min\": 0,\n          \"noValue\": \"-\",\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"yellow\",\n                \"value\": 70\n              },\n              {\n                \"color\": \"orange\",\n                \"value\": 80\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 90\n              }\n            ]\n          },\n          \"unit\": \"percent\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 6,\n        \"w\": 3,\n        \"x\": 15,\n        \"y\": 24\n      },\n      \"id\": 4,\n      \"options\": {\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"lastNotNull\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"showThresholdLabels\": false,\n        \"showThresholdMarkers\": true,\n        \"text\": {}\n      },\n      \"pluginVersion\": \"8.1.8\",\n      \"targets\": [\n        {\n          \"exemplar\": true,\n          \"expr\": \"100-jobs_persistent_volume_free_space_percent{cluster=\\\"$cluster\\\"}\",\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"queryType\": \"randomWalk\",\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Jobs Volume Used Space\",\n      \"type\": \"gauge\"\n    },\n    {\n      \"datasource\": \"Prometheus\",\n      \"description\": \"\",\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"mappings\": [],\n          \"noValue\": \"-\",\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"#ccccdc\",\n                \"value\": null\n              }\n            ]\n          },\n          \"unit\": \"bytes\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 6,\n        \"w\": 3,\n        \"x\": 18,\n        \"y\": 24\n      },\n      \"id\": 7,\n      \"options\": {\n        \"colorMode\": \"value\",\n        \"graphMode\": \"area\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"auto\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"lastNotNull\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"text\": {},\n        \"textMode\": \"auto\"\n      },\n      \"pluginVersion\": \"8.1.8\",\n      \"targets\": [\n        {\n          \"exemplar\": true,\n          \"expr\": \"logging_persistent_volume_disk_space_used_bytes{cluster=\\\"$cluster\\\"}\",\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"queryType\": \"randomWalk\",\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Logging Volume Used\",\n      \"type\": \"stat\"\n    },\n    {\n      \"datasource\": \"Prometheus\",\n      \"description\": \"\",\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"mappings\": [],\n          \"max\": 100,\n          \"min\": 0,\n          \"noValue\": \"-\",\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"yellow\",\n                \"value\": 70\n              },\n              {\n                \"color\": \"orange\",\n                \"value\": 80\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 90\n              }\n            ]\n          },\n          \"unit\": \"percent\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 6,\n        \"w\": 3,\n        \"x\": 21,\n        \"y\": 24\n      },\n      \"id\": 3,\n      \"options\": {\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"lastNotNull\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"showThresholdLabels\": false,\n        \"showThresholdMarkers\": true,\n        \"text\": {}\n      },\n      \"pluginVersion\": \"8.1.8\",\n      \"targets\": [\n        {\n          \"exemplar\": true,\n          \"expr\": \"100-logging_persistent_volume_free_space_percent{cluster=\\\"$cluster\\\"}\",\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"queryType\": \"randomWalk\",\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Logging Volume Used Space\",\n      \"type\": \"gauge\"\n    },\n    {\n      \"datasource\": \"Prometheus\",\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"mappings\": [],\n          \"noValue\": \"0\",\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"text\",\n                \"value\": null\n              },\n              {\n                \"color\": \"green\",\n                \"value\": 1\n              }\n            ]\n          }\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 6,\n        \"w\": 3,\n        \"x\": 0,\n        \"y\": 30\n      },\n      \"id\": 41,\n      \"interval\": \"1m\",\n      \"options\": {\n        \"colorMode\": \"value\",\n        \"graphMode\": \"none\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"auto\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"last\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"text\": {},\n        \"textMode\": \"auto\"\n      },\n      \"pluginVersion\": \"8.1.8\",\n      \"targets\": [\n        {\n          \"exemplar\": false,\n          \"expr\": \"compliance_count{state=\\\"Compliant\\\"}\",\n          \"hide\": false,\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"B\"\n        }\n      ],\n      \"timeFrom\": null,\n      \"title\": \"Compliant Applications\",\n      \"type\": \"stat\"\n    },\n    {\n      \"datasource\": \"Prometheus\",\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"mappings\": [],\n          \"noValue\": \"0\",\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 1\n              }\n            ]\n          }\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 6,\n        \"w\": 3,\n        \"x\": 3,\n        \"y\": 30\n      },\n      \"id\": 42,\n      \"interval\": \"1m\",\n      \"options\": {\n        \"colorMode\": \"value\",\n        \"graphMode\": \"none\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"auto\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"last\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"text\": {},\n        \"textMode\": \"auto\"\n      },\n      \"pluginVersion\": \"8.1.8\",\n      \"targets\": [\n        {\n          \"exemplar\": false,\n          \"expr\": \"compliance_count{state=\\\"NotCompliant\\\"}\",\n          \"hide\": false,\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"B\"\n        }\n      ],\n      \"timeFrom\": null,\n      \"title\": \"Non-Compliant Applications\",\n      \"type\": \"stat\"\n    },\n    {\n      \"datasource\": \"Prometheus\",\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"mappings\": [],\n          \"noValue\": \"0\",\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 1\n              }\n            ]\n          }\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 6,\n        \"w\": 3,\n        \"x\": 6,\n        \"y\": 30\n      },\n      \"id\": 43,\n      \"interval\": \"1m\",\n      \"options\": {\n        \"colorMode\": \"value\",\n        \"graphMode\": \"none\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"auto\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"last\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"text\": {},\n        \"textMode\": \"auto\"\n      },\n      \"pluginVersion\": \"8.1.8\",\n      \"targets\": [\n        {\n          \"exemplar\": false,\n          \"expr\": \"compliance_count{state=\\\"Unmanaged\\\"}\",\n          \"hide\": false,\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"B\"\n        }\n      ],\n      \"timeFrom\": null,\n      \"title\": \"Unmanaged Applications\",\n      \"type\": \"stat\"\n    },\n    {\n      \"datasource\": \"Prometheus\",\n      \"description\": \"\",\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"mappings\": [],\n          \"noValue\": \"-\",\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"#ccccdc\",\n                \"value\": null\n              }\n            ]\n          },\n          \"unit\": \"bytes\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 6,\n        \"w\": 3,\n        \"x\": 12,\n        \"y\": 30\n      },\n      \"id\": 44,\n      \"options\": {\n        \"colorMode\": \"value\",\n        \"graphMode\": \"area\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"auto\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"lastNotNull\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"text\": {},\n        \"textMode\": \"auto\"\n      },\n      \"pluginVersion\": \"8.1.8\",\n      \"targets\": [\n        {\n          \"exemplar\": true,\n          \"expr\": \"snapshot_storage_size_bytes{cluster=\\\"$cluster\\\", type=\\\"physical\\\"}\",\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"queryType\": \"randomWalk\",\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Snapshot Size (Physical)\",\n      \"type\": \"stat\"\n    },\n    {\n      \"datasource\": \"Prometheus\",\n      \"description\": \"\",\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"mappings\": [],\n          \"noValue\": \"-\",\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"#ccccdc\",\n                \"value\": null\n              }\n            ]\n          },\n          \"unit\": \"bytes\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 6,\n        \"w\": 3,\n        \"x\": 15,\n        \"y\": 30\n      },\n      \"id\": 45,\n      \"options\": {\n        \"colorMode\": \"value\",\n        \"graphMode\": \"area\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"auto\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"lastNotNull\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"text\": {},\n        \"textMode\": \"auto\"\n      },\n      \"pluginVersion\": \"8.1.8\",\n      \"targets\": [\n        {\n          \"exemplar\": true,\n          \"expr\": \"snapshot_storage_size_bytes{cluster=\\\"$cluster\\\", type=\\\"logical\\\"}\",\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"queryType\": \"randomWalk\",\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Snapshot Size (Logical)\",\n      \"type\": \"stat\"\n    },\n    {\n      \"datasource\": \"Prometheus\",\n      \"description\": \"\",\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"mappings\": [],\n          \"noValue\": \"-\",\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"#ccccdc\",\n                \"value\": null\n              }\n            ]\n          },\n          \"unit\": \"bytes\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 6,\n        \"w\": 3,\n        \"x\": 18,\n        \"y\": 30\n      },\n      \"id\": 46,\n      \"options\": {\n        \"colorMode\": \"value\",\n        \"graphMode\": \"area\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"auto\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"lastNotNull\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"text\": {},\n        \"textMode\": \"auto\"\n      },\n      \"pluginVersion\": \"8.1.8\",\n      \"targets\": [\n        {\n          \"exemplar\": true,\n          \"expr\": \"export_storage_size_bytes{cluster=\\\"$cluster\\\", type=\\\"physical\\\"}\",\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"queryType\": \"randomWalk\",\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Export Size (Physical)\",\n      \"type\": \"stat\"\n    },\n    {\n      \"datasource\": \"Prometheus\",\n      \"description\": \"\",\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"mappings\": [],\n          \"noValue\": \"-\",\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"#ccccdc\",\n                \"value\": null\n              }\n            ]\n          },\n          \"unit\": \"bytes\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 6,\n        \"w\": 3,\n        \"x\": 21,\n        \"y\": 30\n      },\n      \"id\": 47,\n      \"options\": {\n        \"colorMode\": \"value\",\n        \"graphMode\": \"area\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"auto\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"lastNotNull\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"text\": {},\n        \"textMode\": \"auto\"\n      },\n      \"pluginVersion\": \"8.1.8\",\n      \"targets\": [\n        {\n          \"exemplar\": true,\n          \"expr\": \"export_storage_size_bytes{cluster=\\\"$cluster\\\", type=\\\"logical\\\"}\",\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"queryType\": \"randomWalk\",\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Export Size (Logical)\",\n      \"type\": \"stat\"\n    }\n  ],\n  \"schemaVersion\": 30,\n  \"style\": \"dark\",\n  \"tags\": [],\n  \"templating\": {\n    \"list\": [\n      {\n        \"description\": null,\n        \"error\": null,\n        \"hide\": 2,\n        \"label\": \"Cluster\",\n        \"name\": \"cluster\",\n        \"query\": \"\",\n        \"skipUrlSync\": false,\n        \"type\": \"constant\"\n      }\n    ]\n  },\n  \"time\": {\n    \"from\": \"now-24h\",\n    \"to\": \"now\"\n  },\n  \"timepicker\": {},\n  \"timezone\": \"\",\n  \"title\": \"K10 Dashboard\",\n  \"uid\": \"8Ebb3xS7k\",\n  \"version\": 1\n}\n"
                  }
                }
              },
              "dashboardsConfigMaps": {},
              "deploymentStrategy": {
                "type": "Recreate"
              },
              "downloadDashboards": {
                "env": {},
                "envFromSecret": "",
                "resources": {}
              },
              "downloadDashboardsImage": {
                "pullPolicy": "IfNotPresent",
                "repository": "curlimages/curl",
                "sha": "",
                "tag": "7.73.0"
              },
              "enableKubeBackwardCompatibility": false,
              "enableServiceLinks": true,
              "enabled": true,
              "env": {},
              "envFromConfigMaps": [],
              "envFromSecret": "",
              "envFromSecrets": [],
              "envRenderSecret": {},
              "envValueFrom": {},
              "extraConfigmapMounts": [],
              "extraContainerVolumes": [],
              "extraContainers": "",
              "extraEmptyDirMounts": [],
              "extraExposePorts": [],
              "extraInitContainers": [],
              "extraLabels": {},
              "extraObjects": [],
              "extraSecretMounts": [],
              "extraVolumeMounts": [],
              "global": {
                "airgapped": {
                  "repository": ""
                },
                "imagePullSecret": "",
                "images": {
                  "admin": "",
                  "aggregatedapis": "",
                  "ambassador": "",
                  "auth": "",
                  "bloblifecyclemanager": "",
                  "catalog": "",
                  "cephtool": "",
                  "configmap-reload": "",
                  "controllermanager": "",
                  "crypto": "",
                  "dashboardbff": "",
                  "datamover": "",
                  "dex": "",
                  "emissary": "",
                  "events": "",
                  "executor": "",
                  "frontend": "",
                  "grafana": "",
                  "jobs": "",
                  "kanister": "",
                  "kanister-tools": "",
                  "logging": "",
                  "metering": "",
                  "paygo_daemonset": "",
                  "prometheus": "",
                  "state": "",
                  "upgrade": "",
                  "vbrintegrationapi": ""
                },
                "ingress": {
                  "create": false,
                  "urlPath": ""
                },
                "persistence": {
                  "accessMode": "ReadWriteOnce",
                  "catalog": {
                    "size": ""
                  },
                  "enabled": true,
                  "grafana": {
                    "size": "5Gi"
                  },
                  "jobs": {
                    "size": ""
                  },
                  "logging": {
                    "size": ""
                  },
                  "metering": {
                    "size": "2Gi"
                  },
                  "mountPath": "/mnt/k10state",
                  "size": "20Gi",
                  "storageClass": ""
                },
                "prometheus": {
                  "external": {
                    "baseURL": "",
                    "host": "",
                    "port": ""
                  }
                },
                "rhMarketPlace": true,
                "route": {
                  "enabled": false,
                  "path": ""
                },
                "upstreamCertifiedImages": false
              },
              "grafana.ini": {
                "analytics": {
                  "check_for_updates": true
                },
                "auth": {
                  "disable_login_form": true,
                  "disable_signout_menu": true
                },
                "auth.anonymous": {
                  "enabled": true,
                  "org_name": "Main Org.",
                  "org_role": "Admin"
                },
                "auth.basic": {
                  "enabled": false
                },
                "dashboards": {
                  "default_home_dashboard_path": "/var/lib/grafana/dashboards/default/default.json"
                },
                "grafana_net": {
                  "url": "https://grafana.net"
                },
                "log": {
                  "mode": "console"
                },
                "paths": {
                  "data": "/var/lib/grafana/",
                  "logs": "/var/log/grafana",
                  "plugins": "/var/lib/grafana/plugins",
                  "provisioning": "/etc/grafana/provisioning"
                }
              },
              "headlessService": false,
              "hostAliases": [],
              "image": {
                "pullPolicy": "IfNotPresent",
                "repository": "grafana/grafana",
                "sha": "",
                "tag": "8.5.0"
              },
              "imageRenderer": {
                "affinity": {},
                "enabled": false,
                "env": {
                  "HTTP_HOST": "0.0.0.0"
                },
                "grafanaProtocol": "http",
                "grafanaSubPath": "",
                "hostAliases": [],
                "image": {
                  "pullPolicy": "Always",
                  "repository": "grafana/grafana-image-renderer",
                  "sha": "",
                  "tag": "latest"
                },
                "networkPolicy": {
                  "limitEgress": false,
                  "limitIngress": true
                },
                "nodeSelector": {},
                "podPortName": "http",
                "priorityClassName": "",
                "replicas": 1,
                "resources": {},
                "revisionHistoryLimit": 10,
                "securityContext": {},
                "service": {
                  "enabled": true,
                  "port": 8081,
                  "portName": "http",
                  "targetPort": 8081
                },
                "serviceAccountName": "",
                "tolerations": []
              },
              "ingress": {
                "annotations": {},
                "enabled": false,
                "extraPaths": [],
                "hosts": [
                  "chart-example.local"
                ],
                "labels": {},
                "path": "/",
                "pathType": "Prefix",
                "tls": []
              },
              "initChownData": {
                "enabled": true,
                "resources": {}
              },
              "k10image": {
                "registry": "gcr.io",
                "repository": "kasten-images"
              },
              "ldap": {
                "config": "",
                "enabled": false,
                "existingSecret": ""
              },
              "lifecycleHooks": {},
              "livenessProbe": {
                "failureThreshold": 10,
                "httpGet": {
                  "path": "/api/health",
                  "port": 3000
                },
                "initialDelaySeconds": 60,
                "timeoutSeconds": 30
              },
              "namespaceOverride": "",
              "networkPolicy": {
                "allowExternal": true,
                "enabled": false,
                "explicitNamespacesSelector": {}
              },
              "nodeSelector": {},
              "notifiers": {},
              "persistence": {
                "accessModes": [
                  "ReadWriteOnce"
                ],
                "enabled": true,
                "finalizers": [
                  "kubernetes.io/pvc-protection"
                ],
                "inMemory": {
                  "enabled": false
                },
                "size": "5Gi",
                "type": "pvc"
              },
              "plugins": [],
              "podDisruptionBudget": {},
              "podPortName": "grafana",
              "prometheusName": "prometheus-server",
              "prometheusPrefixURL": "/k10/prometheus",
              "rbac": {
                "create": true,
                "extraClusterRoleRules": [],
                "extraRoleRules": [],
                "namespaced": true,
                "pspEnabled": false,
                "pspUseAppArmor": true
              },
              "readinessProbe": {
                "httpGet": {
                  "path": "/api/health",
                  "port": 3000
                }
              },
              "replicas": 1,
              "resources": {},
              "revisionHistoryLimit": 10,
              "securityContext": {
                "fsGroup": 472,
                "runAsGroup": 472,
                "runAsUser": 472
              },
              "service": {
                "annotations": {},
                "enabled": true,
                "labels": {},
                "port": 80,
                "portName": "service",
                "targetPort": 3000,
                "type": "ClusterIP"
              },
              "serviceAccount": {
                "autoMount": true,
                "create": true,
                "name": null,
                "nameTest": null
              },
              "serviceMonitor": {
                "enabled": false,
                "interval": "1m",
                "labels": {},
                "path": "/metrics",
                "relabelings": [],
                "scheme": "http",
                "scrapeTimeout": "30s",
                "tlsConfig": {}
              },
              "sidecar": {
                "dashboards": {
                  "SCProvider": true,
                  "defaultFolderName": null,
                  "enabled": false,
                  "extraMounts": [],
                  "folder": "/tmp/dashboards",
                  "folderAnnotation": null,
                  "label": "grafana_dashboard",
                  "labelValue": null,
                  "provider": {
                    "allowUiUpdates": false,
                    "disableDelete": false,
                    "folder": "",
                    "foldersFromFilesStructure": false,
                    "name": "sidecarProvider",
                    "orgid": 1,
                    "type": "file"
                  },
                  "resource": "both",
                  "script": null,
                  "searchNamespace": null,
                  "sizeLimit": {},
                  "watchMethod": "WATCH"
                },
                "datasources": {
                  "enabled": false,
                  "initDatasources": false,
                  "label": "grafana_datasource",
                  "labelValue": null,
                  "reloadURL": "http://localhost:3000/api/admin/provisioning/datasources/reload",
                  "resource": "both",
                  "searchNamespace": null,
                  "sizeLimit": {},
                  "skipReload": false,
                  "watchMethod": "WATCH"
                },
                "enableUniqueFilenames": false,
                "image": {
                  "repository": "quay.io/kiwigrid/k8s-sidecar",
                  "sha": "",
                  "tag": "1.15.6"
                },
                "imagePullPolicy": "IfNotPresent",
                "livenessProbe": {},
                "notifiers": {
                  "enabled": false,
                  "label": "grafana_notifier",
                  "resource": "both",
                  "searchNamespace": null,
                  "sizeLimit": {}
                },
                "plugins": {
                  "enabled": false,
                  "initPlugins": false,
                  "label": "grafana_plugin",
                  "labelValue": null,
                  "reloadURL": "http://localhost:3000/api/admin/provisioning/plugins/reload",
                  "resource": "both",
                  "searchNamespace": null,
                  "sizeLimit": {},
                  "skipReload": false,
                  "watchMethod": "WATCH"
                },
                "readinessProbe": {},
                "resources": {},
                "securityContext": {}
              },
              "smtp": {
                "existingSecret": "",
                "passwordKey": "password",
                "userKey": "user"
              },
              "testFramework": {
                "enabled": false,
                "image": "bats/bats",
                "imagePullPolicy": "IfNotPresent",
                "securityContext": {},
                "tag": "v1.4.1"
              },
              "tolerations": [],
              "ubi": {
                "image": {
                  "pullPolicy": "IfNotPresent",
                  "repository": "registry.access.redhat.com/ubi8/ubi-minimal",
                  "tag": "8.6-854"
                }
              }
            },
            "image": {
              "image": "",
              "pullPolicy": "Always",
              "registry": "gcr.io",
              "repository": "kasten-images",
              "tag": ""
            },
            "ingress": {
              "class": "",
              "create": false,
              "host": "",
              "pathType": "",
              "tls": {
                "enabled": false
              },
              "urlPath": ""
            },
            "injectKanisterSidecar": {
              "enabled": false,
              "namespaceSelector": {
                "matchLabels": {}
              },
              "objectSelector": {
                "matchLabels": {}
              },
              "webhookServer": {
                "port": 8080
              }
            },
            "jaeger": {
              "agentDNS": "",
              "enabled": false
            },
            "kanister": {
              "backupTimeout": 45,
              "checkRepoTimeout": 20,
              "deleteTimeout": 45,
              "efsPostRestoreTimeout": 45,
              "hookTimeout": 20,
              "podReadyWaitTimeout": 15,
              "restoreTimeout": 600,
              "statsTimeout": 20
            },
            "kanisterPodCustomAnnotations": "",
            "kanisterPodCustomLabels": "",
            "kanisterToolsImage": {
              "image": "kanister-tools",
              "pullPolicy": "Always",
              "registry": "ghcr.io",
              "repository": "kanisterio"
            },
            "license": "",
            "limiter": {
              "csiSnapshots": 10,
              "genericVolumeCopies": 10,
              "genericVolumeRestores": 10,
              "genericVolumeSnapshots": 10,
              "providerSnapshots": 10
            },
            "logLevel": "info",
            "metering": {
              "awsManagedLicense": false,
              "awsMarketPlaceIamRole": "",
              "awsMarketplace": false,
              "awsRegion": "",
              "consumerId": "",
              "licenseConfigSecretName": "",
              "mode": "",
              "promoID": "",
              "redhatMarketplacePayg": false,
              "reportCollectionPeriod": 1800,
              "reportPushPeriod": 3600,
              "reportingKey": "",
              "serviceAccount": {
                "create": false,
                "name": ""
              }
            },
            "networkPolicy": {
              "create": true
            },
            "optionalColocatedServices": {
              "vbrintegrationapi": {
                "enabled": false
              }
            },
            "prometheus": {
              "alertRelabelConfigs": null,
              "alertmanager": {
                "affinity": {},
                "baseURL": "http://localhost:9093",
                "clusterPeers": [],
                "configFileName": "alertmanager.yml",
                "configFromSecret": "",
                "configMapOverrideName": "",
                "deploymentAnnotations": {},
                "dnsConfig": {},
                "emptyDir": {
                  "sizeLimit": ""
                },
                "enabled": false,
                "extraArgs": {},
                "extraConfigmapMounts": [],
                "extraEnv": {},
                "extraInitContainers": [],
                "extraSecretMounts": [],
                "image": {
                  "pullPolicy": "IfNotPresent",
                  "repository": "quay.io/prometheus/alertmanager",
                  "tag": "v0.23.0"
                },
                "ingress": {
                  "annotations": {},
                  "enabled": false,
                  "extraLabels": {},
                  "extraPaths": [],
                  "hosts": [],
                  "path": "/",
                  "pathType": "Prefix",
                  "tls": []
                },
                "name": "alertmanager",
                "nodeSelector": {},
                "persistentVolume": {
                  "accessModes": [
                    "ReadWriteOnce"
                  ],
                  "annotations": {},
                  "enabled": true,
                  "existingClaim": "",
                  "mountPath": "/data",
                  "size": "2Gi",
                  "subPath": ""
                },
                "podAnnotations": {},
                "podDisruptionBudget": {
                  "enabled": false,
                  "maxUnavailable": 1
                },
                "podLabels": {},
                "podSecurityPolicy": {
                  "annotations": {}
                },
                "prefixURL": "",
                "priorityClassName": "",
                "probeHeaders": [],
                "replicaCount": 1,
                "resources": {},
                "securityContext": {
                  "fsGroup": 65534,
                  "runAsGroup": 65534,
                  "runAsNonRoot": true,
                  "runAsUser": 65534
                },
                "service": {
                  "annotations": {},
                  "clusterIP": "",
                  "externalIPs": [],
                  "labels": {},
                  "loadBalancerIP": "",
                  "loadBalancerSourceRanges": [],
                  "servicePort": 80,
                  "sessionAffinity": "None",
                  "type": "ClusterIP"
                },
                "statefulSet": {
                  "annotations": {},
                  "enabled": false,
                  "headless": {
                    "annotations": {},
                    "enableMeshPeer": false,
                    "labels": {},
                    "servicePort": 80
                  },
                  "labels": {},
                  "podManagementPolicy": "OrderedReady"
                },
                "tolerations": [],
                "useClusterRole": true,
                "useExistingRole": false
              },
              "alertmanagerFiles": {
                "alertmanager.yml": {
                  "global": {},
                  "receivers": [
                    {
                      "name": "default-receiver"
                    }
                  ],
                  "route": {
                    "group_interval": "5m",
                    "group_wait": "10s",
                    "receiver": "default-receiver",
                    "repeat_interval": "3h"
                  }
                }
              },
              "configmapReload": {
                "alertmanager": {
                  "enabled": true,
                  "extraArgs": {},
                  "extraConfigmapMounts": [],
                  "extraVolumeDirs": [],
                  "image": {
                    "pullPolicy": "IfNotPresent",
                    "repository": "jimmidyson/configmap-reload",
                    "tag": "v0.5.0"
                  },
                  "name": "configmap-reload",
                  "resources": {}
                },
                "prometheus": {
                  "enabled": true,
                  "extraArgs": {},
                  "extraConfigmapMounts": [],
                  "extraVolumeDirs": [],
                  "image": {
                    "pullPolicy": "IfNotPresent",
                    "repository": "jimmidyson/configmap-reload",
                    "tag": "v0.5.0"
                  },
                  "name": "configmap-reload",
                  "resources": {}
                }
              },
              "extraScrapeConfigs": null,
              "forceNamespace": null,
              "global": {
                "airgapped": {
                  "repository": ""
                },
                "imagePullSecret": "",
                "images": {
                  "admin": "",
                  "aggregatedapis": "",
                  "ambassador": "",
                  "auth": "",
                  "bloblifecyclemanager": "",
                  "catalog": "",
                  "cephtool": "",
                  "configmap-reload": "",
                  "controllermanager": "",
                  "crypto": "",
                  "dashboardbff": "",
                  "datamover": "",
                  "dex": "",
                  "emissary": "",
                  "events": "",
                  "executor": "",
                  "frontend": "",
                  "grafana": "",
                  "jobs": "",
                  "kanister": "",
                  "kanister-tools": "",
                  "logging": "",
                  "metering": "",
                  "paygo_daemonset": "",
                  "prometheus": "",
                  "state": "",
                  "upgrade": "",
                  "vbrintegrationapi": ""
                },
                "ingress": {
                  "create": false,
                  "urlPath": ""
                },
                "persistence": {
                  "accessMode": "ReadWriteOnce",
                  "catalog": {
                    "size": ""
                  },
                  "enabled": true,
                  "grafana": {
                    "size": "5Gi"
                  },
                  "jobs": {
                    "size": ""
                  },
                  "logging": {
                    "size": ""
                  },
                  "metering": {
                    "size": "2Gi"
                  },
                  "mountPath": "/mnt/k10state",
                  "size": "20Gi",
                  "storageClass": ""
                },
                "prometheus": {
                  "external": {
                    "baseURL": "",
                    "host": "",
                    "port": ""
                  }
                },
                "rhMarketPlace": true,
                "route": {
                  "enabled": false,
                  "path": ""
                },
                "upstreamCertifiedImages": false
              },
              "imagePullSecrets": null,
              "initChownData": {
                "enabled": false
              },
              "k10image": {
                "registry": "gcr.io",
                "repository": "kasten-images"
              },
              "kubeStateMetrics": {
                "enabled": false
              },
              "networkPolicy": {
                "enabled": true
              },
              "nodeExporter": {
                "container": {
                  "securityContext": {
                    "allowPrivilegeEscalation": false
                  }
                },
                "dnsConfig": {},
                "enabled": false,
                "extraArgs": {},
                "extraConfigmapMounts": [],
                "extraHostPathMounts": [],
                "extraInitContainers": [],
                "hostNetwork": true,
                "hostPID": true,
                "hostRootfs": true,
                "image": {
                  "pullPolicy": "IfNotPresent",
                  "repository": "quay.io/prometheus/node-exporter",
                  "tag": "v1.3.0"
                },
                "name": "node-exporter",
                "nodeSelector": {},
                "pod": {
                  "labels": {}
                },
                "podAnnotations": {},
                "podDisruptionBudget": {
                  "enabled": false,
                  "maxUnavailable": 1
                },
                "podSecurityPolicy": {
                  "annotations": {}
                },
                "priorityClassName": "",
                "resources": {},
                "securityContext": {
                  "fsGroup": 65534,
                  "runAsGroup": 65534,
                  "runAsNonRoot": true,
                  "runAsUser": 65534
                },
                "service": {
                  "annotations": {
                    "prometheus.io/scrape": "true"
                  },
                  "clusterIP": "None",
                  "externalIPs": [],
                  "hostPort": 9100,
                  "labels": {},
                  "loadBalancerIP": "",
                  "loadBalancerSourceRanges": [],
                  "servicePort": 9100,
                  "type": "ClusterIP"
                },
                "tolerations": [],
                "updateStrategy": {
                  "type": "RollingUpdate"
                }
              },
              "podSecurityPolicy": {
                "enabled": false
              },
              "pushgateway": {
                "deploymentAnnotations": {},
                "dnsConfig": {},
                "enabled": false,
                "extraArgs": {},
                "extraInitContainers": [],
                "image": {
                  "pullPolicy": "IfNotPresent",
                  "repository": "prom/pushgateway",
                  "tag": "v1.4.2"
                },
                "ingress": {
                  "annotations": {},
                  "enabled": false,
                  "extraPaths": [],
                  "hosts": [],
                  "path": "/",
                  "pathType": "Prefix",
                  "tls": []
                },
                "name": "pushgateway",
                "nodeSelector": {},
                "persistentVolume": {
                  "accessModes": [
                    "ReadWriteOnce"
                  ],
                  "annotations": {},
                  "enabled": false,
                  "existingClaim": "",
                  "mountPath": "/data",
                  "size": "2Gi",
                  "subPath": ""
                },
                "podAnnotations": {},
                "podDisruptionBudget": {
                  "enabled": false,
                  "maxUnavailable": 1
                },
                "podLabels": {},
                "podSecurityPolicy": {
                  "annotations": {}
                },
                "priorityClassName": "",
                "replicaCount": 1,
                "resources": {},
                "securityContext": {
                  "runAsNonRoot": true,
                  "runAsUser": 65534
                },
                "service": {
                  "annotations": {
                    "prometheus.io/probe": "pushgateway"
                  },
                  "clusterIP": "",
                  "externalIPs": [],
                  "labels": {},
                  "loadBalancerIP": "",
                  "loadBalancerSourceRanges": [],
                  "servicePort": 9091,
                  "type": "ClusterIP"
                },
                "tolerations": [],
                "verticalAutoscaler": {
                  "enabled": false
                }
              },
              "rbac": {
                "create": false
              },
              "ruleFiles": {},
              "scrapeCAdvisor": false,
              "server": {
                "affinity": {},
                "alertmanagers": [],
                "baseURL": "/k10/prometheus/",
                "configMapOverrideName": "k10-prometheus-config",
                "configPath": "/etc/config/prometheus.yml",
                "defaultFlagsOverride": [],
                "deploymentAnnotations": {},
                "dnsConfig": {},
                "dnsPolicy": "ClusterFirst",
                "emptyDir": {
                  "sizeLimit": ""
                },
                "enableServiceLinks": true,
                "enabled": true,
                "env": [],
                "extraArgs": {},
                "extraConfigmapMounts": [],
                "extraFlags": [
                  "web.enable-lifecycle"
                ],
                "extraHostPathMounts": [],
                "extraInitContainers": [],
                "extraSecretMounts": [],
                "extraVolumeMounts": [],
                "extraVolumes": [],
                "fullnameOverride": "prometheus-server",
                "global": {
                  "evaluation_interval": "1m",
                  "scrape_interval": "1m",
                  "scrape_timeout": "10s"
                },
                "hostAliases": [],
                "hostNetwork": false,
                "image": {
                  "pullPolicy": "IfNotPresent",
                  "repository": "quay.io/prometheus/prometheus",
                  "tag": "v2.34.0"
                },
                "ingress": {
                  "annotations": {},
                  "enabled": false,
                  "extraLabels": {},
                  "extraPaths": [],
                  "hosts": [],
                  "path": "/",
                  "pathType": "Prefix",
                  "tls": []
                },
                "livenessProbeFailureThreshold": 3,
                "livenessProbeInitialDelay": 30,
                "livenessProbePeriodSeconds": 15,
                "livenessProbeSuccessThreshold": 1,
                "livenessProbeTimeout": 10,
                "name": "server",
                "nodeSelector": {},
                "persistentVolume": {
                  "accessModes": [
                    "ReadWriteOnce"
                  ],
                  "annotations": {},
                  "enabled": true,
                  "existingClaim": "",
                  "mountPath": "/data",
                  "size": "8Gi",
                  "storageClass": "",
                  "subPath": ""
                },
                "podAnnotations": {},
                "podDisruptionBudget": {
                  "enabled": false,
                  "maxUnavailable": 1
                },
                "podLabels": {},
                "podSecurityPolicy": {
                  "annotations": {}
                },
                "prefixURL": "/k10/prometheus",
                "priorityClassName": "",
                "probeHeaders": [],
                "probeScheme": "HTTP",
                "readinessProbeFailureThreshold": 3,
                "readinessProbeInitialDelay": 30,
                "readinessProbePeriodSeconds": 5,
                "readinessProbeSuccessThreshold": 1,
                "readinessProbeTimeout": 4,
                "remoteRead": [],
                "remoteWrite": [],
                "replicaCount": 1,
                "resources": {},
                "retention": "30d",
                "securityContext": {
                  "fsGroup": 65534,
                  "runAsGroup": 65534,
                  "runAsNonRoot": true,
                  "runAsUser": 65534
                },
                "service": {
                  "annotations": {},
                  "clusterIP": "",
                  "enabled": true,
                  "externalIPs": [],
                  "gRPC": {
                    "enabled": false,
                    "servicePort": 10901
                  },
                  "labels": {},
                  "loadBalancerIP": "",
                  "loadBalancerSourceRanges": [],
                  "servicePort": 80,
                  "sessionAffinity": "None",
                  "statefulsetReplica": {
                    "enabled": false,
                    "replica": 0
                  },
                  "type": "ClusterIP"
                },
                "sidecarContainers": {},
                "sidecarTemplateValues": {},
                "startupProbe": {
                  "enabled": false,
                  "failureThreshold": 30,
                  "periodSeconds": 5,
                  "timeoutSeconds": 10
                },
                "statefulSet": {
                  "annotations": {},
                  "enabled": false,
                  "headless": {
                    "annotations": {},
                    "gRPC": {
                      "enabled": false,
                      "servicePort": 10901
                    },
                    "labels": {},
                    "servicePort": 80
                  },
                  "labels": {},
                  "podManagementPolicy": "OrderedReady"
                },
                "storagePath": "",
                "strategy": {
                  "rollingUpdate": {
                    "maxSurge": "100%",
                    "maxUnavailable": "100%"
                  },
                  "type": "RollingUpdate"
                },
                "tcpSocketProbeEnabled": false,
                "terminationGracePeriodSeconds": 300,
                "tolerations": [],
                "verticalAutoscaler": {
                  "enabled": false
                }
              },
              "serverFiles": {
                "alerting_rules.yml": {},
                "alerts": {},
                "prometheus.yml": {
                  "rule_files": [
                    "/etc/config/recording_rules.yml",
                    "/etc/config/alerting_rules.yml",
                    "/etc/config/rules",
                    "/etc/config/alerts"
                  ],
                  "scrape_configs": [
                    {
                      "job_name": "prometheus",
                      "static_configs": [
                        {
                          "targets": [
                            "localhost:9090"
                          ]
                        }
                      ]
                    },
                    {
                      "bearer_token_file": "/var/run/secrets/kubernetes.io/serviceaccount/token",
                      "job_name": "kubernetes-apiservers",
                      "kubernetes_sd_configs": [
                        {
                          "role": "endpoints"
                        }
                      ],
                      "relabel_configs": [
                        {
                          "action": "keep",
                          "regex": "default;kubernetes;https",
                          "source_labels": [
                            "__meta_kubernetes_namespace",
                            "__meta_kubernetes_service_name",
                            "__meta_kubernetes_endpoint_port_name"
                          ]
                        }
                      ],
                      "scheme": "https",
                      "tls_config": {
                        "ca_file": "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt",
                        "insecure_skip_verify": true
                      }
                    },
                    {
                      "bearer_token_file": "/var/run/secrets/kubernetes.io/serviceaccount/token",
                      "job_name": "kubernetes-nodes",
                      "kubernetes_sd_configs": [
                        {
                          "role": "node"
                        }
                      ],
                      "relabel_configs": [
                        {
                          "action": "labelmap",
                          "regex": "__meta_kubernetes_node_label_(.+)"
                        },
                        {
                          "replacement": "kubernetes.default.svc:443",
                          "target_label": "__address__"
                        },
                        {
                          "regex": "(.+)",
                          "replacement": "/api/v1/nodes/$1/proxy/metrics",
                          "source_labels": [
                            "__meta_kubernetes_node_name"
                          ],
                          "target_label": "__metrics_path__"
                        }
                      ],
                      "scheme": "https",
                      "tls_config": {
                        "ca_file": "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt",
                        "insecure_skip_verify": true
                      }
                    },
                    {
                      "bearer_token_file": "/var/run/secrets/kubernetes.io/serviceaccount/token",
                      "job_name": "kubernetes-nodes-cadvisor",
                      "kubernetes_sd_configs": [
                        {
                          "role": "node"
                        }
                      ],
                      "relabel_configs": [
                        {
                          "action": "labelmap",
                          "regex": "__meta_kubernetes_node_label_(.+)"
                        },
                        {
                          "replacement": "kubernetes.default.svc:443",
                          "target_label": "__address__"
                        },
                        {
                          "regex": "(.+)",
                          "replacement": "/api/v1/nodes/$1/proxy/metrics/cadvisor",
                          "source_labels": [
                            "__meta_kubernetes_node_name"
                          ],
                          "target_label": "__metrics_path__"
                        }
                      ],
                      "scheme": "https",
                      "tls_config": {
                        "ca_file": "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt",
                        "insecure_skip_verify": true
                      }
                    },
                    {
                      "honor_labels": true,
                      "job_name": "kubernetes-service-endpoints",
                      "kubernetes_sd_configs": [
                        {
                          "role": "endpoints"
                        }
                      ],
                      "relabel_configs": [
                        {
                          "action": "keep",
                          "regex": true,
                          "source_labels": [
                            "__meta_kubernetes_service_annotation_prometheus_io_scrape"
                          ]
                        },
                        {
                          "action": "drop",
                          "regex": true,
                          "source_labels": [
                            "__meta_kubernetes_service_annotation_prometheus_io_scrape_slow"
                          ]
                        },
                        {
                          "action": "replace",
                          "regex": "(https?)",
                          "source_labels": [
                            "__meta_kubernetes_service_annotation_prometheus_io_scheme"
                          ],
                          "target_label": "__scheme__"
                        },
                        {
                          "action": "replace",
                          "regex": "(.+)",
                          "source_labels": [
                            "__meta_kubernetes_service_annotation_prometheus_io_path"
                          ],
                          "target_label": "__metrics_path__"
                        },
                        {
                          "action": "replace",
                          "regex": "([^:]+)(?::\\d+)?;(\\d+)",
                          "replacement": "$1:$2",
                          "source_labels": [
                            "__address__",
                            "__meta_kubernetes_service_annotation_prometheus_io_port"
                          ],
                          "target_label": "__address__"
                        },
                        {
                          "action": "labelmap",
                          "regex": "__meta_kubernetes_service_annotation_prometheus_io_param_(.+)",
                          "replacement": "__param_$1"
                        },
                        {
                          "action": "labelmap",
                          "regex": "__meta_kubernetes_service_label_(.+)"
                        },
                        {
                          "action": "replace",
                          "source_labels": [
                            "__meta_kubernetes_namespace"
                          ],
                          "target_label": "namespace"
                        },
                        {
                          "action": "replace",
                          "source_labels": [
                            "__meta_kubernetes_service_name"
                          ],
                          "target_label": "service"
                        },
                        {
                          "action": "replace",
                          "source_labels": [
                            "__meta_kubernetes_pod_node_name"
                          ],
                          "target_label": "node"
                        }
                      ]
                    },
                    {
                      "honor_labels": true,
                      "job_name": "kubernetes-service-endpoints-slow",
                      "kubernetes_sd_configs": [
                        {
                          "role": "endpoints"
                        }
                      ],
                      "relabel_configs": [
                        {
                          "action": "keep",
                          "regex": true,
                          "source_labels": [
                            "__meta_kubernetes_service_annotation_prometheus_io_scrape_slow"
                          ]
                        },
                        {
                          "action": "replace",
                          "regex": "(https?)",
                          "source_labels": [
                            "__meta_kubernetes_service_annotation_prometheus_io_scheme"
                          ],
                          "target_label": "__scheme__"
                        },
                        {
                          "action": "replace",
                          "regex": "(.+)",
                          "source_labels": [
                            "__meta_kubernetes_service_annotation_prometheus_io_path"
                          ],
                          "target_label": "__metrics_path__"
                        },
                        {
                          "action": "replace",
                          "regex": "([^:]+)(?::\\d+)?;(\\d+)",
                          "replacement": "$1:$2",
                          "source_labels": [
                            "__address__",
                            "__meta_kubernetes_service_annotation_prometheus_io_port"
                          ],
                          "target_label": "__address__"
                        },
                        {
                          "action": "labelmap",
                          "regex": "__meta_kubernetes_service_annotation_prometheus_io_param_(.+)",
                          "replacement": "__param_$1"
                        },
                        {
                          "action": "labelmap",
                          "regex": "__meta_kubernetes_service_label_(.+)"
                        },
                        {
                          "action": "replace",
                          "source_labels": [
                            "__meta_kubernetes_namespace"
                          ],
                          "target_label": "namespace"
                        },
                        {
                          "action": "replace",
                          "source_labels": [
                            "__meta_kubernetes_service_name"
                          ],
                          "target_label": "service"
                        },
                        {
                          "action": "replace",
                          "source_labels": [
                            "__meta_kubernetes_pod_node_name"
                          ],
                          "target_label": "node"
                        }
                      ],
                      "scrape_interval": "5m",
                      "scrape_timeout": "30s"
                    },
                    {
                      "honor_labels": true,
                      "job_name": "prometheus-pushgateway",
                      "kubernetes_sd_configs": [
                        {
                          "role": "service"
                        }
                      ],
                      "relabel_configs": [
                        {
                          "action": "keep",
                          "regex": "pushgateway",
                          "source_labels": [
                            "__meta_kubernetes_service_annotation_prometheus_io_probe"
                          ]
                        }
                      ]
                    },
                    {
                      "honor_labels": true,
                      "job_name": "kubernetes-services",
                      "kubernetes_sd_configs": [
                        {
                          "role": "service"
                        }
                      ],
                      "metrics_path": "/probe",
                      "params": {
                        "module": [
                          "http_2xx"
                        ]
                      },
                      "relabel_configs": [
                        {
                          "action": "keep",
                          "regex": true,
                          "source_labels": [
                            "__meta_kubernetes_service_annotation_prometheus_io_probe"
                          ]
                        },
                        {
                          "source_labels": [
                            "__address__"
                          ],
                          "target_label": "__param_target"
                        },
                        {
                          "replacement": "blackbox",
                          "target_label": "__address__"
                        },
                        {
                          "source_labels": [
                            "__param_target"
                          ],
                          "target_label": "instance"
                        },
                        {
                          "action": "labelmap",
                          "regex": "__meta_kubernetes_service_label_(.+)"
                        },
                        {
                          "source_labels": [
                            "__meta_kubernetes_namespace"
                          ],
                          "target_label": "namespace"
                        },
                        {
                          "source_labels": [
                            "__meta_kubernetes_service_name"
                          ],
                          "target_label": "service"
                        }
                      ]
                    },
                    {
                      "honor_labels": true,
                      "job_name": "kubernetes-pods",
                      "kubernetes_sd_configs": [
                        {
                          "role": "pod"
                        }
                      ],
                      "relabel_configs": [
                        {
                          "action": "keep",
                          "regex": true,
                          "source_labels": [
                            "__meta_kubernetes_pod_annotation_prometheus_io_scrape"
                          ]
                        },
                        {
                          "action": "drop",
                          "regex": true,
                          "source_labels": [
                            "__meta_kubernetes_pod_annotation_prometheus_io_scrape_slow"
                          ]
                        },
                        {
                          "action": "replace",
                          "regex": "(https?)",
                          "source_labels": [
                            "__meta_kubernetes_pod_annotation_prometheus_io_scheme"
                          ],
                          "target_label": "__scheme__"
                        },
                        {
                          "action": "replace",
                          "regex": "(.+)",
                          "source_labels": [
                            "__meta_kubernetes_pod_annotation_prometheus_io_path"
                          ],
                          "target_label": "__metrics_path__"
                        },
                        {
                          "action": "replace",
                          "regex": "([^:]+)(?::\\d+)?;(\\d+)",
                          "replacement": "$1:$2",
                          "source_labels": [
                            "__address__",
                            "__meta_kubernetes_pod_annotation_prometheus_io_port"
                          ],
                          "target_label": "__address__"
                        },
                        {
                          "action": "labelmap",
                          "regex": "__meta_kubernetes_pod_annotation_prometheus_io_param_(.+)",
                          "replacement": "__param_$1"
                        },
                        {
                          "action": "labelmap",
                          "regex": "__meta_kubernetes_pod_label_(.+)"
                        },
                        {
                          "action": "replace",
                          "source_labels": [
                            "__meta_kubernetes_namespace"
                          ],
                          "target_label": "namespace"
                        },
                        {
                          "action": "replace",
                          "source_labels": [
                            "__meta_kubernetes_pod_name"
                          ],
                          "target_label": "pod"
                        },
                        {
                          "action": "drop",
                          "regex": "Pending|Succeeded|Failed|Completed",
                          "source_labels": [
                            "__meta_kubernetes_pod_phase"
                          ]
                        }
                      ]
                    },
                    {
                      "honor_labels": true,
                      "job_name": "kubernetes-pods-slow",
                      "kubernetes_sd_configs": [
                        {
                          "role": "pod"
                        }
                      ],
                      "relabel_configs": [
                        {
                          "action": "keep",
                          "regex": true,
                          "source_labels": [
                            "__meta_kubernetes_pod_annotation_prometheus_io_scrape_slow"
                          ]
                        },
                        {
                          "action": "replace",
                          "regex": "(https?)",
                          "source_labels": [
                            "__meta_kubernetes_pod_annotation_prometheus_io_scheme"
                          ],
                          "target_label": "__scheme__"
                        },
                        {
                          "action": "replace",
                          "regex": "(.+)",
                          "source_labels": [
                            "__meta_kubernetes_pod_annotation_prometheus_io_path"
                          ],
                          "target_label": "__metrics_path__"
                        },
                        {
                          "action": "replace",
                          "regex": "([^:]+)(?::\\d+)?;(\\d+)",
                          "replacement": "$1:$2",
                          "source_labels": [
                            "__address__",
                            "__meta_kubernetes_pod_annotation_prometheus_io_port"
                          ],
                          "target_label": "__address__"
                        },
                        {
                          "action": "labelmap",
                          "regex": "__meta_kubernetes_pod_annotation_prometheus_io_param_(.+)",
                          "replacement": "__param_$1"
                        },
                        {
                          "action": "labelmap",
                          "regex": "__meta_kubernetes_pod_label_(.+)"
                        },
                        {
                          "action": "replace",
                          "source_labels": [
                            "__meta_kubernetes_namespace"
                          ],
                          "target_label": "namespace"
                        },
                        {
                          "action": "replace",
                          "source_labels": [
                            "__meta_kubernetes_pod_name"
                          ],
                          "target_label": "pod"
                        },
                        {
                          "action": "drop",
                          "regex": "Pending|Succeeded|Failed|Completed",
                          "source_labels": [
                            "__meta_kubernetes_pod_phase"
                          ]
                        }
                      ],
                      "scrape_interval": "5m",
                      "scrape_timeout": "30s"
                    }
                  ]
                },
                "recording_rules.yml": {},
                "rules": {}
              },
              "serviceAccounts": {
                "alertmanager": {
                  "annotations": {},
                  "create": false,
                  "name": null
                },
                "kubeStateMetrics": {
                  "create": false
                },
                "nodeExporter": {
                  "annotations": {},
                  "create": false,
                  "name": null
                },
                "pushgateway": {
                  "annotations": {},
                  "create": false,
                  "name": null
                },
                "server": {
                  "annotations": {},
                  "create": true,
                  "name": null
                }
              }
            },
            "rbac": {
              "create": true
            },
            "resources": {},
            "route": {
              "annotations": {},
              "enabled": false,
              "host": "",
              "labels": {},
              "path": "",
              "tls": {
                "enabled": false,
                "insecureEdgeTerminationPolicy": "Redirect",
                "termination": "edge"
              }
            },
            "scc": {
              "create": true
            },
            "secrets": {
              "apiTlsCrt": "",
              "apiTlsKey": "",
              "awsAccessKeyId": "",
              "awsIamRole": "",
              "awsSecretAccessKey": "",
              "azureADEndpoint": "",
              "azureADResourceID": "",
              "azureClientId": "",
              "azureClientSecret": "",
              "azureCloudEnvID": "",
              "azureResourceGroup": "",
              "azureResourceMgrEndpoint": "",
              "azureSubscriptionID": "",
              "azureTenantId": "",
              "dockerConfig": "",
              "dockerConfigPath": "",
              "googleApiKey": "",
              "ibmSoftLayerApiKey": "",
              "ibmSoftLayerApiUsername": "",
              "vsphereEndpoint": "",
              "vspherePassword": "",
              "vsphereUsername": ""
            },
            "service": {
              "aggregatedApiPort": 10250,
              "externalPort": 8000,
              "gatewayAdminPort": 8877,
              "internalPort": 8000
            },
            "serviceAccount": {
              "create": true,
              "name": ""
            },
            "services": {
              "aggregatedapis": {
                "hostNetwork": false
              },
              "dashboardbff": {
                "hostNetwork": false
              },
              "executor": {
                "hostNetwork": false
              },
              "securityContext": {
                "fsGroup": 1000,
                "runAsUser": 1000
              }
            },
            "toolsImage": {
              "enabled": true,
              "pullPolicy": "Always"
            },
            "vault": {
              "address": "http://vault:8200",
              "secretName": ""
            },
            "vmWare": {
              "taskTimeoutMin": ""
            }
          }
        },
        {
          "apiVersion": "apik10.kasten.io/v1alpha1",
          "kind": "K10restore",
          "metadata": {
            "name": "k10restore"
          },
          "spec": {
            "pointInTime": null,
            "profileName": "",
            "skipResource": null,
            "sourceClusterID": ""
          }
        }
      ]
    capabilities: Full Lifecycle
    categories: Storage
    containerImage: registry.connect.redhat.com/kasten/k10-operator@sha256:07cf18e41410cc089d0c6c847173acaf89dcbd3cc72c5f4d626aa9444fe2413c
    createdAt: Thu Jul 14 17:59:31 UTC 2022
    description: K10 data management platform for OpenShift, The Market Leader for Kubernetes Backup and DR
    marketplace.openshift.io/remote-workflow: https://marketplace.redhat.com/en-us/operators/k10-kasten-operator-rhmp/pricing?utm_source=openshift_console
    marketplace.openshift.io/support-workflow: https://marketplace.redhat.com/en-us/operators/k10-kasten-operator-rhmp/support?utm_source=openshift_console
    olm.properties: '[{"type": "olm.maxOpenShiftVersion", "value": "4.10"}]'
    operatorframework.io/suggested-namespace: kasten-io
    operators.openshift.io/infrastructure-features: '["disconnected"]'
    operators.operatorframework.io/builder: operator-sdk-v1.13.0+git
    operators.operatorframework.io/project_layout: helm.sdk.operatorframework.io/v1
    support: support@kasten.io
    olm.skipRange: <=5.0.0
  name: k10-kasten-operator-rhmp.v5.0.2
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - description: |-
        k10restore can recover the K10 platform in case of a variety of disasters such as
        the accidental deletion of K10, failure of underlying storage that K10 uses for its catalog,
        or even the accidental destruction of the Kubernetes cluster on which K10 is deployed.

        [K10 Disaster Recovery documentation](https://docs.kasten.io/latest/operating/dr.html)

        **Before creating k10restore**:
        1. Install a fresh K10 instance.
        2. Create a Location Profile from where the K10 backups will be restored.
        3. Create a Kubernetes Secret `k10-dr-secret`, with the passphrase
           given when DR was enabled on the previous k10 instance.

        After recovery, deleting the k10restore instance is recommended.
      kind: K10restore
      name: k10restores.apik10.kasten.io
      specDescriptors:
      - description: Required - The cluster ID shown when enabling k10 backup
        displayName: Cluster ID
        path: sourceClusterID
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Required - Name of the location profile used for backup
        displayName: Profile name
        path: profileName
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Optional - Point in time (RFC3339) at which to evaluate restore data. Eg. "2022-01-02T15:04:05Z"
        displayName: Point in time
        path: pointInTime
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Optional - Specify if restore of policies, profiles or secrets need to be skipped. Eg. "profiles,policies"
        displayName: Resources to skip
        path: skipResource
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      version: v1alpha1
    - kind: K10
      name: k10s.apik10.kasten.io
      version: v1alpha1
  description: K10 data management platform for OpenShift, The Market Leader for Kubernetes Backup and DR
  displayName: Kasten K10 (Free)
  icon:
  - base64data: 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
    mediatype: image/png
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - namespaces
          verbs:
          - get
        - apiGroups:
          - ""
          resources:
          - secrets
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
        - apiGroups:
          - apik10.kasten.io
          resources:
          - k10s
          - k10s/status
          - k10s/finalizers
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - clusterrolebindings
          - clusterroles
          verbs:
          - '*'
        - apiGroups:
          - apiregistration.k8s.io
          resources:
          - apiservices
          verbs:
          - '*'
        - apiGroups:
          - security.openshift.io
          resources:
          - securitycontextconstraints
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - configmaps
          - persistentvolumeclaims
          - secrets
          - serviceaccounts
          - services
          verbs:
          - '*'
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - rolebindings
          - roles
          verbs:
          - '*'
        - apiGroups:
          - apps
          resources:
          - deployments
          verbs:
          - '*'
        - apiGroups:
          - networking.k8s.io
          resources:
          - networkpolicies
          verbs:
          - '*'
        - apiGroups:
          - apik10.kasten.io
          resources:
          - k10restores
          - k10restores/status
          - k10restores/finalizers
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - clusterrolebindings
          - clusterroles
          verbs:
          - '*'
        - apiGroups:
          - security.openshift.io
          resources:
          - securitycontextconstraints
          verbs:
          - '*'
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - rolebindings
          - roles
          verbs:
          - '*'
        - apiGroups:
          - batch
          resources:
          - jobs
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - serviceaccounts
          verbs:
          - '*'
        - apiGroups:
          - authentication.k8s.io
          resources:
          - tokenreviews
          verbs:
          - create
        - apiGroups:
          - authorization.k8s.io
          resources:
          - subjectaccessreviews
          verbs:
          - create
        - apiGroups:
          - policy
          resources:
          - podsecuritypolicies
          verbs:
          - '*'
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - clusterrolebindings
          - clusterroles
          - rolebindings
          - roles
          verbs:
          - '*'
        - apiGroups:
          - apiregistration.k8s.io
          resources:
          - apiservices
          verbs:
          - '*'
        - apiGroups:
          - security.openshift.io
          resources:
          - securitycontextconstraints
          verbs:
          - '*'
        - apiGroups:
          - route.openshift.io
          resources:
          - routes
          verbs:
          - '*'
        - apiGroups:
          - admissionregistration.k8s.io
          resources:
          - mutatingwebhookconfigurations
          verbs:
          - '*'
        serviceAccountName: k10-kasten-operator-rhmp-controller-manager
      deployments:
      - name: k10-kasten-operator-rhmp-controller-manager
        spec:
          replicas: 1
          selector:
            matchLabels:
              control-plane: controller-manager
          strategy: {}
          template:
            metadata:
              labels:
                control-plane: controller-manager
            spec:
              containers:
              - args:
                - --secure-listen-address=0.0.0.0:8443
                - --upstream=http://127.0.0.1:8080/
                - --logtostderr=true
                - --v=10
                image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:011909289ad5a6e6dd012fafaab83117777073febb15536ee7e66a4d5830f303
                name: kube-rbac-proxy
                ports:
                - containerPort: 8443
                  name: https
                  protocol: TCP
                resources: {}
              - args:
                - --health-probe-bind-address=:8081
                - --metrics-bind-address=127.0.0.1:8080
                - --leader-elect
                - --leader-election-id=k10-kasten-operator-rhmp
                env:
                - name: RELATED_IMAGE_ADMIN
                  value: registry.connect.redhat.com/kasten/admin@sha256:7046bc543e815d48011af8028cb57645c7e3a78647f9e21047ad5ab41e9aa2b7
                - name: RELATED_IMAGE_AGGREGATEDAPIS
                  value: registry.connect.redhat.com/kasten/aggregatedapis@sha256:e1af0cdfda0a82e4e7fdcb2d99169df97398a26cfaa96174bb13dcbf4686bd62
                - name: RELATED_IMAGE_AUTH
                  value: registry.connect.redhat.com/kasten/auth@sha256:b7cd62cbd898ef29e0a0cec13b7ec5ca26d000196c23853b5a715fab02967745
                - name: RELATED_IMAGE_CATALOG
                  value: registry.connect.redhat.com/kasten/catalog@sha256:265c749e79ec3ae2c09a24a036bc7c43268f9d13119225826d468a9ce74ecd3f
                - name: RELATED_IMAGE_CONTROLLERMANAGER
                  value: registry.connect.redhat.com/kasten/controllermanager@sha256:ca0f6bb92f934bcca6a8e07e9adce034919fe719718dbbc7365e979c99414a06
                - name: RELATED_IMAGE_CRYPTO
                  value: registry.connect.redhat.com/kasten/crypto@sha256:d54cd59f29fbceef8f5c6d24289d6284d99a5c2f8e5446e8722cf22a32ff2116
                - name: RELATED_IMAGE_DASHBOARDBFF
                  value: registry.connect.redhat.com/kasten/dashboardbff@sha256:0a0aaa0963f08e4855cf49e28a39d5dcaf9d6f5969695a2df67196c562fef466
                - name: RELATED_IMAGE_EVENTS
                  value: registry.connect.redhat.com/kasten/events@sha256:d16f2be244948eb98384a45b9fd03cf31c434b7f19bcba4e1877a17b52e612e3
                - name: RELATED_IMAGE_EXECUTOR
                  value: registry.connect.redhat.com/kasten/executor@sha256:622e3f2d3d4591e045edf07397df8720243499246b6673e48ed88a3ff868a162
                - name: RELATED_IMAGE_FRONTEND
                  value: registry.connect.redhat.com/kasten/frontend@sha256:be135c7654d0cc5568b1de0107588ce4046d6efda63065a7caf1bf6891076d9b
                - name: RELATED_IMAGE_JOBS
                  value: registry.connect.redhat.com/kasten/jobs@sha256:ffba383bd57339224feba1263d45d814b2178baf278d5a980faaf8b90f7405c0
                - name: RELATED_IMAGE_KANISTER
                  value: registry.connect.redhat.com/kasten/kanister@sha256:f7017dbad7d7f797cb3dc340706e8cbf3206a6a13d69a610a65612a150a34691
                - name: RELATED_IMAGE_LOGGING
                  value: registry.connect.redhat.com/kasten/logging@sha256:be0d0878faa801befa9a62da820f46675e745ec66b8183bd9f744d39acdba341
                - name: RELATED_IMAGE_METERING
                  value: registry.connect.redhat.com/kasten/metering@sha256:0b49bc68cfcc6e451957ee9d4eefa80d23bdf7f581b3aa77768feae04b2ba845
                - name: RELATED_IMAGE_STATE
                  value: registry.connect.redhat.com/kasten/state@sha256:998d9b4875e73945ebf42f274a7a634f70a040020d3a9b2a7901b773d9867c77
                - name: RELATED_IMAGE_UPGRADE
                  value: registry.connect.redhat.com/kasten/upgrade@sha256:a9fc2dc2d04034ca72b28770d7599b8ce2c4d1858e8a9b9c1afad0fc8729d994
                - name: RELATED_IMAGE_CEPHTOOL
                  value: registry.connect.redhat.com/kasten/cephtool@sha256:b5f681fa18f01409d1d65ddd2fcc45f5d55c25f7e6a2a0ae7a8454a2f2e9b674
                - name: RELATED_IMAGE_DATAMOVER
                  value: registry.connect.redhat.com/kasten/datamover@sha256:aa5267e310984157caf6baf4e14244410ffaced6d43a78dffc382eb3aa1d125d
                - name: RELATED_IMAGE_BLM
                  value: registry.connect.redhat.com/kasten/bloblifecyclemanager@sha256:53b9bd87b712785e84c0a65536939b0c89f305f5f44d68860c16a3e8bfb06595
                - name: RELATED_IMAGE_PAYGODAEMONSET
                  value: registry.connect.redhat.com/kasten/init@sha256:b9b7b96e9c2d1b3e395a0bcb183f4160109f094ec3751c786e591bac554e8c6f
                - name: RELATED_IMAGE_KANISTERTOOLS
                  value: registry.connect.redhat.com/kasten/kanister-tools@sha256:bfebcde288f916fbb441b496d67d49412d742da0c6e0aa349a2835d87def5e43
                - name: RELATED_IMAGE_EMISSARY
                  value: registry.connect.redhat.com/kasten/emissary@sha256:97132b2258ed6d1dee07fee9040fe2c6c62025d3cccbcfe1966ac28f08a78901
                - name: RELATED_IMAGE_PROMETHEUS
                  value: registry.connect.redhat.com/kasten/prometheus@sha256:b1df993cb098d07c5adb31078c53bb16fdd9c2d160acfa66144db4c90ac54a39
                - name: RELATED_IMAGE_CONFIGMAPRELOAD
                  value: registry.connect.redhat.com/kasten/configmap-reload@sha256:a320d6893b7b7ef006d0c4ee51bc223ecd07d845e8ec633e3485c7d1cc700395
                - name: RELATED_IMAGE_DEX
                  value: registry.connect.redhat.com/kasten/dex@sha256:6c1e284cdc03f4e0888653a90edef7d541a9e7eae87ce181b81e2b69edebfda1
                - name: RELATED_IMAGE_GRAFANA
                  value: registry.connect.redhat.com/kasten/grafana@sha256:3c80e260b7bb13799349eac4db81b46ee9f43adbdeb9ba57ba673f31d8b2f238
                - name: RELATED_IMAGE_RESTORECTL
                  value: registry.connect.redhat.com/kasten/restorectl@sha256:2e99c7d39b27d68a1194be30db190be9312a1c8dafaf33a39fd8b7f7c9aa9992
                image: registry.connect.redhat.com/kasten/k10-operator@sha256:07cf18e41410cc089d0c6c847173acaf89dcbd3cc72c5f4d626aa9444fe2413c
                imagePullPolicy: Always
                livenessProbe:
                  httpGet:
                    path: /healthz
                    port: 8081
                  initialDelaySeconds: 15
                  periodSeconds: 20
                name: manager
                readinessProbe:
                  httpGet:
                    path: /readyz
                    port: 8081
                  initialDelaySeconds: 5
                  periodSeconds: 10
                resources:
                  limits:
                    cpu: 800m
                    memory: 600Mi
                  requests:
                    cpu: 400m
                    memory: 200Mi
                securityContext:
                  allowPrivilegeEscalation: false
              securityContext:
                runAsNonRoot: true
              serviceAccountName: k10-kasten-operator-rhmp-controller-manager
              terminationGracePeriodSeconds: 10
      permissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - patch
        serviceAccountName: k10-kasten-operator-rhmp-controller-manager
    strategy: deployment
  installModes:
  - supported: true
    type: OwnNamespace
  - supported: true
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  keywords:
  - kubernetes
  - storage
  - data-management
  links:
  - name: K10 Documentation
    url: https://docs.kasten.io
  - name: Kasten by Veaam
    url: https://kasten.io
  maintainers:
  - email: support@kasten.io
    name: Kasten by Veeam
  maturity: stable
  provider:
    name: Kasten by Veeam, kasten.io
    url: https://kasten.io
  version: 5.0.2
  relatedImages:
  - name: k10-operator-07cf18e41410cc089d0c6c847173acaf89dcbd3cc72c5f4d626aa9444fe2413c-annotation
    image: registry.connect.redhat.com/kasten/k10-operator@sha256:07cf18e41410cc089d0c6c847173acaf89dcbd3cc72c5f4d626aa9444fe2413c
  - name: kube-rbac-proxy
    image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:011909289ad5a6e6dd012fafaab83117777073febb15536ee7e66a4d5830f303
  - name: manager
    image: registry.connect.redhat.com/kasten/k10-operator@sha256:07cf18e41410cc089d0c6c847173acaf89dcbd3cc72c5f4d626aa9444fe2413c
  - name: admin
    image: registry.connect.redhat.com/kasten/admin@sha256:7046bc543e815d48011af8028cb57645c7e3a78647f9e21047ad5ab41e9aa2b7
  - name: aggregatedapis
    image: registry.connect.redhat.com/kasten/aggregatedapis@sha256:e1af0cdfda0a82e4e7fdcb2d99169df97398a26cfaa96174bb13dcbf4686bd62
  - name: auth
    image: registry.connect.redhat.com/kasten/auth@sha256:b7cd62cbd898ef29e0a0cec13b7ec5ca26d000196c23853b5a715fab02967745
  - name: catalog
    image: registry.connect.redhat.com/kasten/catalog@sha256:265c749e79ec3ae2c09a24a036bc7c43268f9d13119225826d468a9ce74ecd3f
  - name: controllermanager
    image: registry.connect.redhat.com/kasten/controllermanager@sha256:ca0f6bb92f934bcca6a8e07e9adce034919fe719718dbbc7365e979c99414a06
  - name: crypto
    image: registry.connect.redhat.com/kasten/crypto@sha256:d54cd59f29fbceef8f5c6d24289d6284d99a5c2f8e5446e8722cf22a32ff2116
  - name: dashboardbff
    image: registry.connect.redhat.com/kasten/dashboardbff@sha256:0a0aaa0963f08e4855cf49e28a39d5dcaf9d6f5969695a2df67196c562fef466
  - name: events
    image: registry.connect.redhat.com/kasten/events@sha256:d16f2be244948eb98384a45b9fd03cf31c434b7f19bcba4e1877a17b52e612e3
  - name: executor
    image: registry.connect.redhat.com/kasten/executor@sha256:622e3f2d3d4591e045edf07397df8720243499246b6673e48ed88a3ff868a162
  - name: frontend
    image: registry.connect.redhat.com/kasten/frontend@sha256:be135c7654d0cc5568b1de0107588ce4046d6efda63065a7caf1bf6891076d9b
  - name: jobs
    image: registry.connect.redhat.com/kasten/jobs@sha256:ffba383bd57339224feba1263d45d814b2178baf278d5a980faaf8b90f7405c0
  - name: kanister
    image: registry.connect.redhat.com/kasten/kanister@sha256:f7017dbad7d7f797cb3dc340706e8cbf3206a6a13d69a610a65612a150a34691
  - name: logging
    image: registry.connect.redhat.com/kasten/logging@sha256:be0d0878faa801befa9a62da820f46675e745ec66b8183bd9f744d39acdba341
  - name: metering
    image: registry.connect.redhat.com/kasten/metering@sha256:0b49bc68cfcc6e451957ee9d4eefa80d23bdf7f581b3aa77768feae04b2ba845
  - name: state
    image: registry.connect.redhat.com/kasten/state@sha256:998d9b4875e73945ebf42f274a7a634f70a040020d3a9b2a7901b773d9867c77
  - name: upgrade
    image: registry.connect.redhat.com/kasten/upgrade@sha256:a9fc2dc2d04034ca72b28770d7599b8ce2c4d1858e8a9b9c1afad0fc8729d994
  - name: cephtool
    image: registry.connect.redhat.com/kasten/cephtool@sha256:b5f681fa18f01409d1d65ddd2fcc45f5d55c25f7e6a2a0ae7a8454a2f2e9b674
  - name: datamover
    image: registry.connect.redhat.com/kasten/datamover@sha256:aa5267e310984157caf6baf4e14244410ffaced6d43a78dffc382eb3aa1d125d
  - name: blm
    image: registry.connect.redhat.com/kasten/bloblifecyclemanager@sha256:53b9bd87b712785e84c0a65536939b0c89f305f5f44d68860c16a3e8bfb06595
  - name: paygodaemonset
    image: registry.connect.redhat.com/kasten/init@sha256:b9b7b96e9c2d1b3e395a0bcb183f4160109f094ec3751c786e591bac554e8c6f
  - name: kanistertools
    image: registry.connect.redhat.com/kasten/kanister-tools@sha256:bfebcde288f916fbb441b496d67d49412d742da0c6e0aa349a2835d87def5e43
  - name: emissary
    image: registry.connect.redhat.com/kasten/emissary@sha256:97132b2258ed6d1dee07fee9040fe2c6c62025d3cccbcfe1966ac28f08a78901
  - name: prometheus
    image: registry.connect.redhat.com/kasten/prometheus@sha256:b1df993cb098d07c5adb31078c53bb16fdd9c2d160acfa66144db4c90ac54a39
  - name: configmapreload
    image: registry.connect.redhat.com/kasten/configmap-reload@sha256:a320d6893b7b7ef006d0c4ee51bc223ecd07d845e8ec633e3485c7d1cc700395
  - name: dex
    image: registry.connect.redhat.com/kasten/dex@sha256:6c1e284cdc03f4e0888653a90edef7d541a9e7eae87ce181b81e2b69edebfda1
  - name: grafana
    image: registry.connect.redhat.com/kasten/grafana@sha256:3c80e260b7bb13799349eac4db81b46ee9f43adbdeb9ba57ba673f31d8b2f238
  - name: restorectl
    image: registry.connect.redhat.com/kasten/restorectl@sha256:2e99c7d39b27d68a1194be30db190be9312a1c8dafaf33a39fd8b7f7c9aa9992
